{"version":3,"sources":["assets/trolley.jpg","assets/man-shipping-box.jpg","assets/shipping-cost.jpg","assets/logo-dark.png","assets/ngn-flag.jpg","helper/authentcate.js","store/actions/action_shipment.js","store/reducers/reducer_shipment.js","helper/Auth.js","store/actions/action_user.js","store/reducers/reducer_user.js","store/actions/action_units.js","store/reducers/reducer_unit.js","store/actions/action_auth.js","store/reducers/reducer_auth.js","store/actions/action_customer.js","store/reducers/reducer_customer.js","store/actions/action_report.js","store/reducers/reducer_report.js","store/reducers/index.js","components/pages/Carousel.js","components/pages/Header.js","components/pages/Footer.js","components/pages/Home.js","components/pages/Forms/CompanyInfo.js","components/pages/StateList.js","components/pages/Forms/PickupInformation.js","components/pages/Forms/PackageInfo.js","components/pages/Forms/RequestSummary.js","components/pages/Ravepay.js","components/pages/Receipt.js","components/pages/DownloadBtn.js","components/pages/Quote.js","helper/calculator.js","components/Dashboard/Sidebar.js","components/pages/Pagination.js","components/Dashboard/Search.js","components/Dashboard/Shipments.js","components/Dashboard/ShipmentDetails.js","components/Dashboard/Header.js","components/Dashboard/Users.js","components/pages/Chart.js","components/pages/PercentageChart.js","components/Dashboard/DashboardHome.js","components/Dashboard/DelayedShipment.js","components/Dashboard/PrealertUpdate.js","components/Dashboard/PreAlert.js","components/Dashboard/DeliveredList.js","components/Dashboard/NewShipmentList.js","components/Dashboard/Settings.js","components/Dashboard/Transactions.js","components/Dashboard/Customers.js","components/Dashboard/ReportList.js","components/Dashboard/Report.js","components/Dashboard/Dashboard.js","components/Dashboard/Signup.js","components/Dashboard/SignIn.js","components/pages/Forms/PasswordReset.js","components/pages/Forms/ChangePassword.js","App.js","index.js"],"names":["module","exports","localAuth","window","localStorage","getItem","JSON","parse","createFailed","error","type","requestShipment","data","dispatch","fetch","method","headers","ACCEPT","body","stringify","then","response","json","resp","createSuccess","catch","err","message","getShipmentFailed","getShipment","quoteId","token","viewFailed","getShipmentsFailed","getShipments","shipmentDeletedFailed","shipmentDelete","shipmentId","mesage","changeStatus","status","userId","user","_id","searchFailed","searchShipment","searchTerm","initialState","shipments","shipment","createLoading","getLoading","getSuccess","deliverLoading","deliverSuccess","deleteLoading","deleteSuccess","viewLoading","viewSuccess","approveLoading","approveSuccess","statusLoading","statusSuccess","Auth","setItem","removeItem","registrationFailed","loginFailed","getUsersFailed","getUsers","deleteUserFailed","users","registerLoading","registerSuccess","logingLoading","logingSuccess","uploadLoading","uploadSuccess","logoutLoading","logoutSuccess","roleLoading","roleSuccess","unitFailed","getUnitFailed","getUnit","updateFailed","deleteUnitFailed","units","unit","loading","success","updateLoading","updateSuccess","sendEmailSuccess","sendEmailFailed","auth","deleteFailed","getFailed","customers","customer","reportFailed","reports","report","rootReducer","combineReducers","state","action","concat","getLodaing","loginLoading","loginSuccess","items","src","Logistic1","altText","caption","Logistic2","Logistic3","HomeCarousel","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","onExiting","onExited","key","alt","style","width","maxHeight","minHeight","Carousel","className","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Header","isOpen","setIsOpen","Navbar","expand","Container","NavbarBrand","color","href","Logo","height","NavbarToggler","onClick","background","Collapse","navbar","Nav","NavbarText","NavLink","border","padding","styles","icon","fontSize","marginLeft","marginTop","cursor","hr","button","borderRadius","Footer","Row","Col","xs","xl","Button","location","Home","id","xmlns","viewBox","fill","fill-opacity","d","to","CompanyInfo","companyName","contactLName","contactFName","email","phone","setCompanyName","setContactFName","setContactLName","setEmail","setPhone","errors","htmlFor","placeholder","value","onChange","e","target","StateList","stateName","setState","country","val","PickupInformation","pickupAddress","pickupCity","pickupState","destinationAddress","destinationCity","destinationState","setPickupAddress","setPickupCity","setPickupState","setDestination","setDestinationCity","setDestinationState","PackageInfo","packageInfo","weight","dimension","specialInstruction","numOfPieces","setPackageInfo","setWeight","setNumOfPieces","setDimension","setSpecialInstruction","setUnit","Input","min","i","RequestSummary","Card","CardBody","readOnly","Ravepay","callback","handleSubmit","close","console","log","bind","this","amount","pay_button_text","payment_method","customer_email","customer_phone","ravePubKey","process","onclose","Component","StyleSheet","create","document","page","paddingLeft","backgroundColor","heading","textAlign","fontWeight","marginBottom","date","text","salutation","paddingTop","Receipt","size","moment","createAt","format","trackingNumber","paid","buttonContainer","alignItems","alignContent","viewer","h5","DownloadButton","setShow","useEffect","Step","Steps","Quote","useDispatch","useSelector","mainUnit","setAmount","count","setCount","cardOption","setCardOption","deliveryOption","setDeliveryOption","setErrors","errorMsg","setErrorMsg","modal","setModal","modal1","setModal1","newAmount","setNewAmount","mainu","toggle","formValidation","toggle1","closeModal","closeModal1","onClearFields","forEach","m","toLowerCase","pieces","shipmentTotal","formValid","test","receiptData","fillOpacity","current","title","description","Modal","ModalHeader","ModalBody","ModalFooter","disabled","name","tip","float","Sider","Layout","SideBar","collapsed","onCollapse","collapsible","position","top","theme","defaultSelectedKeys","mode","Item","DashboardOutlined","UsergroupAddOutlined","CarOutlined","DollarOutlined","FormOutlined","SettingOutlined","Paginations","pager","setPage","initialPage","prevProps","prevState","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","pages","Array","keys","Pagination","aria-label","PaginationItem","PaginationLink","index","React","defaultProps","Search","handleSearch","handleKeyPress","setSearchTerm","InputGroup","onKeyPress","borderTopLeftRadius","borderBottomLeftRadius","InputGroupAddon","addonType","borderBottomRightRadius","borderTopRightRadius","SearchOutlined","Shipments","setPageOfItems","setData","userRole","role","quote","msg","a","dataSource","left","Table","responsive","hover","scope","charAt","toUpperCase","isView","Badge","match","url","DeleteOutlined","ShipmentDetails","pathname","shippingId","handleStatus","shipmentDetails","bordered","DashboardHeader","username","fullname","newShipments","filter","onLogout","deauthenticateUser","ClockCircleOutlined","marginRight","Flag","LogoutOutlined","Users","onDelete","userList","Chart","monthSaleArr","labels","datasets","label","borderColor","legend","display","fontColor","options","scales","yAxes","ticks","suggestedMin","suggestedMax","PercentageChart","delayedShipments","perce","toFixed","plugins","render","precision","showActualPercentages","xAxes","DashboardHome","shipmentList","allShipment","deliveredList","pendingView","unpaidDeliveryList","approvedList","pendingShipments","pendingPaymentList","currentMonth","Date","getMonth","toTwoDigits","currentMonthSale","push","eachShipment","createdAt","currentMonthAmt","reduce","b","userEmail","pendingPayment","delayPercent","MailOutlined","UserOutlined","CheckSquareOutlined","StockOutlined","CheckCircleOutlined","SnippetsOutlined","textDecoration","ExclamationCircleOutlined","PhoneOutlined","TableOutlined","LikeOutlined","DelayedShipments","ship","PrealertUpdate","PreAlertShipments","view","setView","setId","prealert","toggleview","DeliveredList","deliveredShipments","delivered","NewShipmentList","Settings","edit","setEdit","setMessage","handleChange","preventDefault","onPost","unitSuccess","createUnit","handleDelete","deleteUnit","handleUpdate","updateUnit","ArrowLeftOutlined","EditOutlined","toggleEdit","Transactions","allToday","setAlltoday","allSales","setAllSales","allMonth","setAllMonth","allPending","setAllPending","activeTab","setActiveTab","tab","allShipments","today","getDate","currentMonthTrx","todayTrx","todaySales","totalSales","eachPayment","todayDate","_i","dailySales","monthlySales","total","pendingSales","todaySlice","monthSlice","allSlice","pendingSlice","tabs","NavItem","classnames","active","TabContent","TabPane","tabId","sm","hovered","paddingRight","Customers","customerId","setTimeout","company","firstName","lastName","ReportList","setToggle","reportId","reportList","reporter","Report","setTitle","setReport","reportSuccess","sendReport","Content","Dashboard","margin","exact","path","PreAlert","DelayedShipment","getFullYear","Signup","setFullname","password","setPassword","onRegister","registrationSuccess","register","setInterval","SignIn","handleLogin","authenticateUser","onLogin","PasswordReset","sendEmail","ChangePassword","confirmPassword","setConfirmPassword","handlePasswordChange","changePassword","ntf","App","componentDidMount","loaderTimeOut","Promise","resolve","isUserAuthenticated","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d63065b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trolley.c75b80ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/man-shipping-box.58458445.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shipping-cost.a1591f8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-dark.6394e716.png\";","module.exports = __webpack_public_path__ + \"static/media/ngn-flag.0f2f5744.jpg\";","export const isAuthenticated = () => {\n  if ( typeof window === \"undefined\" ) {\n    return false;\n  }\n\n  if ( sessionStorage.getItem( \"token\" ) ) {\n    return JSON.parse( sessionStorage.getItem( \"token\" ) );\n  } else {\n    return false;\n  }\n}\n\nexport const localAuth = () => {\n  if ( typeof window === \"undefined\" ) {\n    return false;\n  }\n\n  if ( localStorage.getItem( \"token\" ) ) {\n    return JSON.parse( localStorage.getItem( \"token\" ) );\n  } else {\n    return false;\n  }\n}","import { localAuth } from \"../../helper/authentcate\";\n\nexport const CREATE_QUOTE_START = \"CREATE_QUOTE_START\";\nexport const CREATE_QUOTE_SUCCESS = \"CREATE_QUOTE_SUCCESS\";\nexport const CREATE_QUOTE_FAILED = \"CREATE_QUOTE_FAILED\";\nexport const GET_SHIPMENT_START = \"GET_SHIPMENT_START\";\nexport const GET_SHIPMENT_SUCCESS = \"GET_SHIPMENT_SUCCESS\";\nexport const GET_SHIPMENT_FAILED = \"GET_SHIPMENT_FAILED\";\nexport const GET_SHIPMENTS_START = \"GET-SHIPMENT_START\";\nexport const GET_SHIPMENTS_SUCCESS = \"GET_SHIPMENTS_SUCCESS\";\nexport const GET_SHIPMENTS_FAILED = \"GET_SHIPMENTS_FAILED\";\nexport const SHIPMENT_DELIVERED_START = \"SHIPMENT_DELIVERED_START\";\nexport const SHIPMENT_DELIVERED_SUCCESS = \"SHIPMENT_DELIVERED_SUCCESS\";\nexport const SHIPMENT_DELIVERED_FAILED = \"SHIPMENT_DELIVERED_FAILED\";\nexport const SHIPMENT_DELETE_START = \"SHIPMENT_DELETE-START\";\nexport const SHIPMENT_DELETE_SUCCESS = \"SHIPMENT_DELETE_SUCCESS\";\nexport const SHIPMENT_DELETE_FAILED = \"SHIPMENT_DELETE_FAILED\";\nexport const VIEW_START = \"VIEW_START\";\nexport const VIEW_SUCCESS = \"VIEW_SUCCESS\";\nexport const VIEW_FAILED = \"VIEW_FAILED\";\nexport const APPROVE_START = \"APPROVE_START\";\nexport const APPROVE_SUCCESS = \"APPROVE_SUCCESS\";\nexport const APPROVE_FAILED = \"APPROVE_FAILED\";\nexport const CHANGE_STATUS_START = \"CHANGE_STATUS_START\";\nexport const CHANGE_STATUS_SUCCESS = \"CHANGE_STATUS_SUCCESS\";\nexport const CHANGE_STATUS_FAILED = \"CHANGE_STATUS_FAILED\";\nexport const CURRENT_MONTH_SALE_START = \"CURRENT_MONTH_SALE_START\";\nexport const CURRENT_MONTH_SALE_SUCCESS = \"CURRENT_MONTH_SALE_SUCCESS\";\nexport const CURRENT_MONTH_SALE_FAILED = \"CURRENT_MONTH_SALE_FAILED\";\nexport const SEARCH_START = \"SEARCH_START\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SEARCH_FAILED = \"SEARCH_FAILED\";\n\nexport const createStart = () => {\n  return {\n    type: CREATE_QUOTE_START\n  }\n}\n\nexport const createSuccess = (data) => {\n  return {\n    type: CREATE_QUOTE_SUCCESS,\n    data\n  }\n}\n\nexport const createFailed = (error) => {\n  return {\n    type: CREATE_QUOTE_FAILED,\n    error\n  }\n}\n\nexport const requestShipment = (data) => {\n  return dispatch => {\n    dispatch(createStart());\n    fetch(`/v1/post`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(createFailed(resp.error));\n        dispatch(createSuccess(resp));\n      })\n      .catch(err =>{\n        return dispatch(createFailed(`Request failed. ${err.message}`));\n      });\n  }\n}\n\nexport const getShipmentStart = () => {\n  return {\n    type: GET_SHIPMENT_START\n  }\n}\n\nexport const getShipmentSuccess = (data) => {\n  return {\n    type: GET_SHIPMENT_SUCCESS,\n    data\n  }\n}\n\nexport const getShipmentFailed = (error) => {\n  return {\n    type: GET_SHIPMENT_FAILED,\n    error\n  }\n}\n\nexport const getShipment = (quoteId) => {\n  return dispatch => {\n    dispatch(getShipmentStart());\n    fetch(`/v1/single/${quoteId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getShipmentFailed(resp.error));\n        dispatch(getShipmentSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(getShipmentFailed(`Request failed. ${err.message}`));\n      });\n  }\n}\n\nexport const viewStart = () => {\n  return {\n    type: VIEW_START\n  }\n}\n\nexport const viewSuccess = (data) => {\n  return {\n    type: VIEW_SUCCESS,\n    data\n  }\n}\n\nexport const viewFailed = (error) => {\n  return {\n    type: VIEW_FAILED,\n    error\n  }\n}\n\nexport const view = (shippingId) => {\n  return dispatch => {\n    dispatch(viewStart());\n    fetch(`/v1/quote/view/${shippingId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(viewFailed(resp.error));\n        dispatch(viewSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getShipment(shippingId));\n      })\n      .catch(err => {\n        dispatch(viewFailed(`${err.message}`));\n      });\n  }\n}\nexport const getShipmentsStart = () => {\n  return {\n    type: GET_SHIPMENTS_START\n  }\n}\n\nexport const getShipmentsSuccess = (data) => {\n  return {\n    type: GET_SHIPMENTS_SUCCESS,\n    data\n  }\n}\n\nexport const getShipmentsFailed = (error) => {\n  return {\n    type: GET_SHIPMENTS_FAILED,\n    error\n  }\n}\n\nexport const getShipments = () => {\n  return dispatch => {\n    dispatch(getShipmentsStart());\n    fetch(`/v1/all`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getShipmentsFailed(resp.error));\n        dispatch(getShipmentsSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(getShipmentsFailed(`Request failed. ${err.message}`));\n      });\n  }\n}\n\nexport const shipmentDeliveredStart = () => {\n  return {\n    type: SHIPMENT_DELIVERED_START\n  }\n}\n\nexport const shipmentDeliveredSuccess = (data) => {\n  return {\n    type: SHIPMENT_DELIVERED_SUCCESS,\n    data\n  }\n}\n\nexport const shipmentDeliveredFailed = (error) => {\n  return {\n    type: SHIPMENT_DELIVERED_FAILED,\n    error\n  }\n}\n\nexport const shipmentDelivered = (shipmentId) => {\n  return dispatch => {\n    dispatch(shipmentDeliveredStart());\n    fetch(`/v1/quote/${shipmentId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(shipmentDeliveredFailed(resp.error));\n        dispatch(shipmentDeliveredSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getShipment(shipmentId));\n      })\n      .catch(err => {\n        dispatch(shipmentDeliveredFailed(`Request failed. ${err.mesage}`));\n      });\n  }\n}\n\nexport const shipmentDeletedStart = () => {\n  return {\n    type: SHIPMENT_DELETE_START\n  }\n}\n\nexport const shipmentDeletedSuccess = (data) => {\n  return {\n    type: SHIPMENT_DELETE_SUCCESS,\n    data\n  }\n}\n\nexport const shipmentDeletedFailed = (error) => {\n  return {\n    type: SHIPMENT_DELETE_FAILED,\n    error\n  }\n}\n\nexport const shipmentDelete = (shipmentId) => {\n  return dispatch => {\n    dispatch(shipmentDeletedStart());\n    fetch(`/v1/quote/${shipmentId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(shipmentDeletedFailed(resp.error));\n        dispatch(shipmentDeletedSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getShipments());\n      })\n      .catch(err => {\n        dispatch(shipmentDeletedFailed(err.mesage));\n      });\n  }\n}\n\nexport const approveStart = () => {\n  return {\n    type: APPROVE_START\n  }\n}\n\nexport const approveSuccess = (data) => {\n  return {\n    type: APPROVE_SUCCESS,\n    data\n  }\n}\n\nexport const approveFailed = (error) => {\n  return {\n    type: APPROVE_FAILED,\n    error\n  }\n}\n\nexport const approve = (shipmentId) => {\n  const userId = localAuth().user && localAuth().user._id;\n  return dispatch => {\n    approveStart();\n    fetch(`/v1/quote/approve/${shipmentId}/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(approveFailed(resp.error));\n        dispatch(approveSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getShipment(shipmentId));\n      })\n      .catch(err => {\n        return dispatch(approveFailed(err.message));\n      });\n  }\n}\n\nexport const statusStart = () => {\n  return {\n    type: CHANGE_STATUS_START\n  }\n}\n\nexport const statusSuccess = (data) => {\n  return {\n    type: CHANGE_STATUS_SUCCESS,\n    data\n  }\n}\n\nexport const statusFailed = (error) => {\n  return {\n    type: CHANGE_STATUS_FAILED,\n    error\n  }\n}\n\nexport const changeStatus = (status, shipmentId) => {\n  const userId = localAuth().user && localAuth().user._id;\n  return dispatch => {\n    dispatch(statusStart());\n    fetch(`/v1/quote/status/${shipmentId}/${userId}/${status}`, {\n      method: \"PUT\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(statusFailed(resp.error));\n        dispatch(statusSuccess(resp));\n      })\n      .then(() => {\n        return dispatch(getShipment(shipmentId));\n      });\n  }\n}\n\nexport const currentMonthStart = () => {\n  return {\n    type: CURRENT_MONTH_SALE_START\n  }\n}\n\nexport const currentMonthSuccess = (data) => {\n  return {\n    type: CURRENT_MONTH_SALE_SUCCESS,\n    data\n  }\n}\n\nexport const currentMonthFailed = (error) => {\n  return {\n    type: CURRENT_MONTH_SALE_FAILED,\n    error\n  }\n}\n\nexport const currentMonth = () => {\n  return dispatch => {\n    dispatch(currentMonthStart());\n    fetch(`/v1/quote`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(currentMonthFailed(resp.error));\n        dispatch(currentMonthSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(err.message);\n      })\n  }\n}\n\nexport const searchStart = () => {\n  return {\n    type: SEARCH_START\n  }\n}\n\nexport const searchSuccess = ( data ) => {\n  return {\n    type: SEARCH_SUCCESS,\n    data\n  }\n}\n\nexport const searchFailed = ( error ) => {\n  return {\n    type: SEARCH_FAILED,\n    error\n  }\n}\n\nexport const searchShipment = ( searchTerm ) => {\n  return dispatch => {\n    dispatch( searchStart() );\n    fetch( `/v1/quote/search?q=${ searchTerm }`, {\n      method: \"GET\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    } )\n      .then( response => response.json() )\n      .then( resp => {\n        if (resp.error) return dispatch(searchFailed(resp.error));\n        dispatch( searchSuccess( resp ) );\n      } )\n      .catch( err => {\n        dispatch( searchFailed(err.message) );\n      } );\n  }\n}","import {\n  CREATE_QUOTE_START,\n  CREATE_QUOTE_SUCCESS,\n  CREATE_QUOTE_FAILED,\n  GET_SHIPMENT_START,\n  GET_SHIPMENT_SUCCESS,\n  GET_SHIPMENT_FAILED,\n  GET_SHIPMENTS_START,\n  GET_SHIPMENTS_SUCCESS,\n  GET_SHIPMENTS_FAILED,\n  SHIPMENT_DELIVERED_START,\n  SHIPMENT_DELIVERED_SUCCESS,\n  SHIPMENT_DELIVERED_FAILED,\n  SHIPMENT_DELETE_START,\n  SHIPMENT_DELETE_SUCCESS,\n  SHIPMENT_DELETE_FAILED,\n  VIEW_START,\n  VIEW_SUCCESS,\n  VIEW_FAILED,\n  APPROVE_START,\n  APPROVE_SUCCESS,\n  APPROVE_FAILED,\n  CHANGE_STATUS_START,\n  CHANGE_STATUS_SUCCESS,\n  CHANGE_STATUS_FAILED,\n  CURRENT_MONTH_SALE_START,\n  CURRENT_MONTH_SALE_SUCCESS,\n  CURRENT_MONTH_SALE_FAILED,\n  SEARCH_START,\n  SEARCH_SUCCESS,\n  SEARCH_FAILED,\n} from \"../actions/action_shipment\";\n\nconst initialState = {\n  shipments: [],\n  shipment: {},\n  createLoading: false,\n  createSuccess: false,\n  getLoading: false,\n  getSuccess: false,\n  deliverLoading: false,\n  deliverSuccess: false,\n  deleteLoading: false,\n  deleteSuccess: false,\n  viewLoading: false,\n  viewSuccess: false,\n  approveLoading: false,\n  approveSuccess: false,\n  statusLoading: false,\n  statusSuccess: false,\n  error: \"\"\n}\n\nexport const shipment = (state=initialState, action) => {\n  switch(action.type) {\n    case CREATE_QUOTE_START:\n      return {\n        ...state,\n        createLoading: true\n      }\n    case CREATE_QUOTE_SUCCESS:\n      return {\n        ...state,\n        createLoading: false,\n        createSuccess: true,\n        shipments: state.shipments.concat(action.data),\n      }\n    case CREATE_QUOTE_FAILED:\n      return {\n        ...state,\n        createLoading: false,\n        createSuccess: false,\n        error: action.error\n      }\n    case GET_SHIPMENT_START:\n      return {\n        ...state,\n        getLoading: true,\n      }\n    case GET_SHIPMENT_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        shipment: action.data,\n      }\n    case GET_SHIPMENT_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    case GET_SHIPMENTS_START:\n      return {\n        ...state,\n        getLoading: false\n      }\n    case GET_SHIPMENTS_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        shipments: action.data\n      }\n    case GET_SHIPMENTS_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    case SEARCH_START:\n      return {\n        ...state,\n        getLoading: true\n      }\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        shipments: action.data,\n      }\n    case SEARCH_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    case SHIPMENT_DELIVERED_START:\n      return {\n        ...state,\n        deliverLoading: true\n      }\n    case SHIPMENT_DELIVERED_SUCCESS:\n      return {\n        ...state,\n        deliverLoading: false,\n        deliverSuccess: true,\n        shipment: action.data,\n      }\n    case SHIPMENT_DELIVERED_FAILED:\n      return {\n        ...state,\n        deliverLoading: false,\n        deliverSuccess: false,\n        error: action.error\n      }\n    case SHIPMENT_DELETE_START:\n      return {\n        ...state,\n        deleteLoading: true,\n        deleteSuccess: false\n      }\n    case SHIPMENT_DELETE_SUCCESS:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: true,\n        shipment: action.data,\n      }\n    case SHIPMENT_DELETE_FAILED:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: false,\n        error: action.error\n      }\n    case VIEW_START:\n      return {\n        ...state,\n        viewLoading: true,\n      }\n    case VIEW_SUCCESS:\n      return {\n        ...state,\n        viewLoading: false,\n        viewSuccess: true,\n        shipment: action.data,\n      }\n    case VIEW_FAILED:\n      return {\n        ...state,\n        viewLoading: true,\n        viewSuccess: false,\n        error: action.error\n      }\n    case APPROVE_START:\n      return {\n        ...state,\n        approveLoading: true\n      }\n    case APPROVE_SUCCESS:\n      return {\n        ...state,\n        approveLoading: false,\n        approveSuccess: true,\n        shipment: action.data,\n      }\n    case APPROVE_FAILED:\n      return {\n        ...state,\n        approveLoading: false,\n        approveSuccess: false,\n        error: action.error\n      }\n    case CHANGE_STATUS_START:\n      return {\n        ...state,\n        statusLoading: true\n      }\n    case CHANGE_STATUS_SUCCESS:\n      return {\n        ...state,\n        statusLoading: false,\n        statusSuccess: true,\n        shipment: action.data,\n      }\n    case CHANGE_STATUS_FAILED:\n      return {\n        ...state,\n        statusLoading: false,\n        statusSuccess: false,\n        error: action.error\n      }\n    case CURRENT_MONTH_SALE_START:\n      return {\n        ...state,\n        getLodaing: true\n      }\n    case CURRENT_MONTH_SALE_SUCCESS:\n      return {\n        ...state,\n        getLodaing: false,\n        getSuccess: true,\n        shipment: action.data,\n      }\n    case CURRENT_MONTH_SALE_FAILED:\n      return {\n        ...state,\n        getLodaing: false,\n        getSuccess: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}","class Auth {\n  static authenticateUser( token ) {\n    localStorage.setItem( 'token', token );\n  }\n\n  static isUserAuthenticated() {\n    return localStorage.getItem( 'token' ) !== null;\n  }\n\n  static deauthenticateUser() {\n    localStorage.removeItem( 'token' );\n  }\n\n  static getToken() {\n    return localStorage.getItem( 'token' );\n  }\n}\n\nexport default Auth;","import Auth from \"../../helper/Auth\"\nimport { localAuth } from \"../../helper/authentcate\";\n\nexport const REGISTRATION_START = \"REGISTRATION_START\";\nexport const REGISTRATION_SUCCESS = \"REGISTRATION_SUCCESS\";\nexport const REGISTRATION_FAILED = \"REGISTRATION_FAILED\";\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\nexport const LOGOUT_START = \"LOGOUT_START\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED = \"LOGOUT_FAILED\";\nexport const GET_USER_START = \"GET-USER_START\";\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAILED = \"GET_USER_FAILED\";\nexport const GET_USERS_START = \"GET_USERS_START\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILED = \"GET_USERS_FAILED\";\nexport const UPLOAD_PHOTO_START = \"UPLOAD_PHOTO-START\";\nexport const UPLOAD_PHOTO_SUCCESS = \"UPLOAD_PHOTO_SUCCESS\";\nexport const UPLOAD_PHOTO_FAILED = 'UPLOAD_PHOTO_FAILED';\nexport const DELETE_USER_START = \"DELETE_USER_SART\";\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\nexport const DELETE_USER_FAILED = \"DELETE_USER_FAILED\";\nexport const ASSIGN_ROLE_START = \"ASSIGN_ROLE_START\";\nexport const ASSIGN_ROLE_SUCCESS = \"ASSIGN_ROLE_SUCCESS\";\nexport const ASSIGN_ROLE_FAILED = \"ASSIGN_ROLE_FAILED\";\n\n/**\n * Handles account logout\n */\nexport const logoutStart = () => {\n  return {\n    type: LOGIN_START\n  }\n}\n\nexport const logoutSuccess = ( data ) => {\n  return {\n    type: LOGOUT_SUCCESS,\n    data\n  }\n}\n\nexport const logoutFailed = ( error ) => {\n  return {\n    type: LOGOUT_FAILED,\n    error\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch( logoutStart() );\n    fetch( `/v1/logout`, {\n      method: \"GET\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    } )\n      .then( response => response.text() )\n      .then( resp => {\n        dispatch( logoutSuccess( JSON.parse(resp) ) );\n      } )\n      .catch( err => {\n        dispatch( logoutFailed( err.message ) );\n      } );\n  }\n}\n\n/**\n * Action types for agent registration\n */\nexport const registrationStart = () => {\n  return {\n    type: REGISTRATION_START\n  }\n}\n\nexport const registrationSuccess = ( data ) => {\n  return {\n    type: REGISTRATION_SUCCESS,\n    data\n  }\n}\n\nexport const registrationFailed = ( error ) => {\n  return {\n    type: REGISTRATION_FAILED,\n    error\n  }\n}\n\n/**\n * Action creator for agent registration\n * @param {data} data of the person registering\n */\nexport const register = ( data ) => {\n  return dispatch => {\n    dispatch( registrationStart() );\n    fetch( `/v1/user`, {\n      method: \"POST\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify( data )\n    } )\n      .then( response => response.json() )\n      .then( resp => {\n        if ( resp.error ) return dispatch( registrationFailed(resp.error));\n        dispatch( registrationSuccess( resp ) );\n      } )\n      .catch( err => {\n        dispatch( registrationFailed( `Request failed. ${err.message}`));\n      } );\n  }\n}\n\n/**\n * Action types for agent login\n */\n\nexport const loginStart = () => {\n  return {\n    type: LOGIN_START\n  }\n}\n\nexport const loginSuccess = ( data ) => {\n return {\n   type: LOGIN_SUCCESS,\n   data\n }\n}\n\nexport const loginFailed = ( error ) => {\n return {\n   type: LOGIN_FAILED,\n   error\n }\n}\n\n/**\n* Action creator for agents login\n*/\n\nexport const onLogin = ( data ) =>{\n return dispatch => {\n   dispatch( loginStart() );\n   fetch( `/v1/login`, {\n     method: \"POST\",\n     headers: {\n       ACCEPT: \"application/json\",\n       \"Content-Type\": \"application/json\"\n     },\n     body: JSON.stringify( data )\n   } )\n     .then( response => response.json())\n     .then( resp => {\n       if ( resp.error ) {\n         dispatch( loginFailed( resp.error ));\n         return;\n       }\n       dispatch( loginSuccess( resp ));\n       Auth.authenticateUser( JSON.stringify( resp ));\n     })\n     .catch( err => {\n       dispatch( loginFailed(err.message) );\n     });\n }  \n}\n\nexport const getUserStart = () => {\n  return {\n    type: GET_USER_START\n  }\n}\n\nexport const getUserSuccess = (data) => {\n  return {\n    type: GET_USER_SUCCESS,\n    data\n  }\n}\n\nexport const getUserFailed = (error) => {\n  return {\n    type: GET_USER_FAILED,\n    error\n  }\n}\n\nexport const getUser = (userId) => {\n  return dispatch => {\n    dispatch(getUserStart());\n    fetch(`/v1/user/:${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getUserFailed(resp.error));\n        dispatch(getUserSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(getUserFailed(`Request failed. ${err.message}`));\n      });\n  }\n}\n\nexport const getUsersStart = () => {\n  return {\n    type: GET_USERS_START\n  }\n}\n\nexport const getUsersSuccess = (data) => {\n  return {\n    type: GET_USERS_SUCCESS,\n    data\n  }\n}\n\nexport const getUsersFailed = (error) => {\n  return {\n    type: GET_USERS_FAILED,\n    error\n  }\n}\n\nexport const getUsers = () => {\n  return dispatch => {\n    dispatch(getUsersStart());\n    fetch(`/v1/users`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getUsersFailed(resp.error));\n        dispatch(getUsersSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(getUsersFailed(`Request failed. ${err.message}`));\n      });\n  }\n}\n\nexport const deleteUserStart = () => {\n  return {\n    type: DELETE_USER_START\n  }\n}\n\nexport const deleteUserSuccess = (data) => {\n  return {\n    type: DELETE_USER_SUCCESS,\n    data\n  }\n}\n\nexport const deleteUserFailed = (error) => {\n  return {\n    type: DELETE_USER_FAILED,\n    error\n  }\n}\n\nexport const deleteUser = (userId) => {\n  return dispatch => {\n    dispatch(deleteUserStart());\n    fetch(`/v1/user/delete/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(deleteUserFailed(resp.error));\n        dispatch(deleteUserSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getUsers());\n      })\n      .catch(err => {\n        dispatch(deleteUserFailed(`Failed to delete. ${err.message}`));\n      });\n  }\n}\n\nexport const uploadPhotoStart = () => {\n  return {\n    type: UPLOAD_PHOTO_START\n  }\n}\n\nexport const uploadPhotoSuccess = (data) => {\n  return {\n    type: UPLOAD_PHOTO_SUCCESS,\n    data\n  }\n}\n\nexport const uploadPhotoFailed = (error) => {\n  return {\n    type: UPLOAD_PHOTO_FAILED,\n    error\n  }\n}\n\nexport const uploadPhoto = (data, userId) => {\n  return dispatch => {\n    dispatch(uploadPhotoStart());\n    fetch(`/v1/profile/photo/:${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"x-auth-token\": localAuth().token\n      },\n      body: data\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(uploadPhotoFailed(resp.error));\n        dispatch(uploadPhotoSuccess(resp))\n      })\n      .catch(err => {\n        dispatch(uploadPhotoFailed(`Failed to upload. ${err.message}`));\n      });\n  }\n}\n\nexport const roleStart = () => {\n  return {\n    type: ASSIGN_ROLE_START\n  }\n}\n\nexport const roleSuccess = (data) => {\n  return {\n    type: ASSIGN_ROLE_SUCCESS,\n    data\n  }\n}\n\nexport const roleFailed = (error) => {\n  return {\n    type: ASSIGN_ROLE_FAILED,\n    error\n  }\n}\n\nexport const role = (userId) => {\n  return dispatch => {\n    dispatch(roleStart());\n    fetch(`/v1/role/${userId}/admin`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(roleFailed(resp.error));\n        dispatch(roleSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(roleFailed(`Request failed. ${err.message}`));\n      });\n  }\n}\n\n\n","import {\n  REGISTRATION_START,\n  REGISTRATION_SUCCESS,\n  REGISTRATION_FAILED,\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT_START,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILED,\n  GET_USER_START,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  GET_USERS_START,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  UPLOAD_PHOTO_START,\n  UPLOAD_PHOTO_SUCCESS,\n  UPLOAD_PHOTO_FAILED,\n  DELETE_USER_START,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAILED,\n  ASSIGN_ROLE_START,\n  ASSIGN_ROLE_SUCCESS,\n  ASSIGN_ROLE_FAILED,\n} from \"../actions/action_user\";\n\nconst initialState = {\n  users: [],\n  user: {},\n  registerLoading: false,\n  registerSuccess: false,\n  logingLoading: false,\n  logingSuccess: false,\n  getLoading: false,\n  getSuccess: false,\n  deleteLoading: false,\n  deleteSuccess: false,\n  uploadLoading: false,\n  uploadSuccess: false,\n  logoutLoading: false,\n  logoutSuccess: false,\n  roleLoading: false,\n  roleSuccess: false,\n  error: \"\"\n}\n\n\nexport const users = (state=initialState, action) => {\n  switch(action.type) {\n    case REGISTRATION_START:\n      return {\n        ...state,\n        registerLoading: true,\n      }\n    case REGISTRATION_SUCCESS:\n      return {\n        ...state,\n        registerLoading: false,\n        registerSuccess: true,\n        users: state.users.concat(action.data),\n      }\n    case REGISTRATION_FAILED:\n      return {\n        ...state,\n        registerLoading: false,\n        registerSuccess: false,\n        error: action.error\n      }\n    case LOGIN_START:\n      return {\n        ...state,\n        loginLoading: true\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false,\n        loginSuccess: true,\n        user: action.data,\n      }\n    case LOGIN_FAILED:\n      return {\n        ...state,\n        loginLoading: false,\n        loginSuccess: false,\n        error: action.error\n      }\n    case LOGOUT_START:\n      return {\n        ...state,\n        logoutLoading: true\n      }\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        logoutLoading: false,\n        logoutSuccess: true,        \n        user: action.data,\n      }\n    case LOGOUT_FAILED:\n      return {\n        ...state,\n        logoutLoading: false,\n        logoutSuccess: false,        \n        error: action.error\n      }\n    case GET_USER_START:\n      return {\n        ...state,\n        getLoading: true,\n        \n      }\n    case GET_USER_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        users: action.data,\n      }\n    case GET_USER_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    case GET_USERS_START:\n      return {\n        ...state,\n        getLoading: true\n      }\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        users: action.data\n      }\n    case GET_USERS_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    case UPLOAD_PHOTO_START:\n      return {\n        ...state,\n        uploadLoading: true\n      }\n    case UPLOAD_PHOTO_SUCCESS:\n      return {\n        ...state,\n        uploadLoading: false,\n        uploadSuccess: true,\n        users: action.data,\n      }\n    case UPLOAD_PHOTO_FAILED:\n      return {\n        ...state,\n        uploadLoading: false,\n        uploadSuccess: false,\n        error: action.error\n      }\n    case DELETE_USER_START:\n      return {\n        ...state,\n        deleteLoading: true\n      }\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: true,\n        users: action.data,\n      }\n    case DELETE_USER_FAILED:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: false,\n        error: action.error\n      }\n    case ASSIGN_ROLE_START:\n      return {\n        ...state,\n        roleLoading: true,\n      }\n    case ASSIGN_ROLE_SUCCESS:\n      return {\n        ...state,\n        roleLoading: false,\n        roleSuccess: true,\n        user: action.data,\n      }\n    case ASSIGN_ROLE_FAILED:\n      return {\n        ...state,\n        roleLoading: false,\n        roleSuccess: false,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}\n\n","import { localAuth } from \"../../helper/authentcate\";\n\nexport const UNIT_START = \"UNIT_START\";\nexport const UNIT_SUCCESS = \"UNIT_SUCCESS\";\nexport const UNIT_FAILED = \"UNIT_FAILED\";\nexport const GET_UNIT_START = \"GET_UNIT_START\";\nexport const GET_UNIT_SUCCESS = \"GET_UNIT_SUCCESS\";\nexport const GET_UNIT_FAILED = \"GET_UNIT_FAILED\";\nexport const UPDATE_UNIT_START = \"UPDATE_UNIT_START\";\nexport const UPDATE_UNIT_SUCCESS = \"UPDATE_UNIT_SUCCESS\";\nexport const UPDATE_UNIT_FAILED = \"UPDATE_UNIT_FAILED\";\nexport const DELETE_UNIT_START = \"DELETE_UNIT_START\";\nexport const DELETE_UNIT_SUCCESS = \"DELETE_UNIT_SUCCESS\";\nexport const DELETE_UNIT_FAILED = \"DELETE_UNIT_FAILED\";\n\nexport const unitStart = () => {\n  return {\n    type: UNIT_START\n  }\n}\n\nexport const unitSuccess = (data) => {\n  return {\n    type: UNIT_SUCCESS,\n    data\n  }\n}\n\nexport const unitFailed = (error) => {\n  return {\n    type: UNIT_FAILED,\n    error\n  }\n}\n\nexport const createUnit = (data) => {\n  const userId = localAuth().user && localAuth().user._id;\n  const role = localAuth().user && localAuth().user.role;\n  return dispatch => {\n    dispatch(unitStart());\n    fetch(`/v1/unit/${userId}/${role}`, {\n      method: \"POST\",\n      headers: {\n        ACCEPT: 'application/json',\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localAuth().token\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(unitFailed(resp.error));\n        dispatch(unitSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getUnit());\n      })\n      .catch(err => {\n        return dispatch(unitFailed(err.message));\n      });\n  }\n}\n\nexport const getUnitStart = () => {\n  return {\n    type: GET_UNIT_START\n  }\n}\n\nexport const getUnitSuccess = (data) => {\n  return {\n    type: GET_UNIT_SUCCESS,\n    data\n  }\n}\n\nexport const getUnitFailed = (error) => {\n  return {\n    type: GET_UNIT_FAILED,\n    error\n  }\n}\n\nexport const getUnit = () => {\n  return dispatch => {\n    dispatch(getUnitStart());\n    fetch(`/v1/unit`, {\n      method: \"GET\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getUnitFailed(resp.error));\n        dispatch(getUnitSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(getUnitFailed(err.message));\n      });\n  }\n}\n\nexport const updateStart = () => {\n  return {\n    type: UPDATE_UNIT_START\n  }\n}\n\nexport const updateSuccess = (data) => {\n  return {\n    type: UPDATE_UNIT_SUCCESS,\n    data\n  }\n}\n\nexport const updateFailed = (error) => {\n  return {\n    type: UPDATE_UNIT_FAILED,\n    error\n  }\n}\n\nexport const updateUnit = (id, data) => {\n  console.log(id, data, \" from action\")\n  const role = localAuth().user && localAuth().user.role;\n  return dispatch => {\n    dispatch(updateStart());\n    fetch(`/v1/unit/${role}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localAuth().token\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(updateFailed(resp.error));\n        dispatch(updateSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getUnit());\n      })\n      .catch(err => {\n        return dispatch(updateFailed(err.message));\n      });\n  }\n}\n\nexport const deleteUnitStart = () => {\n  return {\n    type: DELETE_UNIT_START\n  }\n}\n\nexport const deleteUnitSuccess = (data) => {\n  return {\n    type: DELETE_UNIT_SUCCESS,\n    data\n  }\n}\n\nexport const deleteUnitFailed = (error) => {\n  return {\n    type: DELETE_UNIT_FAILED,\n    error\n  }\n}\n\nexport const deleteUnit = (id) => {\n  const role = localAuth().user && localAuth().user.role;\n  return dispatch => {\n    dispatch(deleteUnitStart());\n    fetch(`/v1/unit/${role}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(deleteUnitFailed(resp.error));\n        dispatch(deleteUnitSuccess(resp));\n      })\n      .then(() => {\n        dispatch(getUnit());\n      })\n      .catch(err => {\n        return dispatch(deleteUnitFailed(err.message));\n      });\n  }\n}","import {\n  UNIT_START,\n  UNIT_SUCCESS,\n  UNIT_FAILED,\n  GET_UNIT_START,\n  GET_UNIT_SUCCESS,\n  GET_UNIT_FAILED,\n  UPDATE_UNIT_START,\n  UPDATE_UNIT_SUCCESS,\n  UPDATE_UNIT_FAILED,\n  DELETE_UNIT_START,\n  DELETE_UNIT_SUCCESS,\n  DELETE_UNIT_FAILED,\n} from \"../actions/action_units\";\n\nconst initialState = {\n  units: [],\n  unit: {},\n  loading: false,\n  success: false,\n  getLoading: false,\n  getSuccess: false,\n  deleteLoading: false,\n  deleteSuccess: false,\n  updateLoading: false,\n  updateSuccess: false,\n  error: \"\"\n}\n\nexport const units = (state=initialState, action) => {\n  switch(action.type) {\n    case UNIT_START:\n      return {\n        ...state,\n        loading: true,\n      }\n    case UNIT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        units: state.units.concat(action.data),\n      }\n    case UNIT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        error: action.error\n      }\n    case GET_UNIT_START:\n      return {\n        ...state,\n        getLoading: true\n      }\n    case GET_UNIT_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        units: action.data,\n      }\n    case GET_UNIT_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    case UPDATE_UNIT_START:\n      return {\n        ...state,\n        updateLoading: true,\n        \n      }\n    case UPDATE_UNIT_SUCCESS:\n      return {\n        ...state,\n        updateLoading: false,\n        updateSuccess: true,\n        unit: action.data,\n      }\n    case UPDATE_UNIT_FAILED:\n      return {\n        ...state,\n        updateLoading: false,\n        updateSuccess: false,\n        error: action.error\n      }\n    case DELETE_UNIT_START:\n      return {\n        ...state,\n        deleteLoading: true\n      }\n    case DELETE_UNIT_SUCCESS:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: true,\n        unit: action.data\n      }\n    case DELETE_UNIT_FAILED:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: false,\n        error: action.error\n      }\n    default: \n      return state;\n  }\n}","export const SEND_EMAIL_START = \"SEND_EMAIL_START\";\nexport const SEND_EMAIL_SUCCESS = \"SEND_EMAIL_SUCCESS\";\nexport const SEND_EMAIL_FAILED = \"SEND_EMAIL_FAILED\";\nexport const CHANGE_PASSWORD_START = \"CHANGE_PASSWORD_START\";\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\nexport const CHANGE_PASSWORD_FAILED = \"CHANGE_PASSWORD_FAILED\";\n\nexport const sendEmailStart = () => {\n  return {\n    type: SEND_EMAIL_START\n  }\n}\n\nexport const sendEmailSuccess = (data) => {\n  return {\n    type: SEND_EMAIL_SUCCESS,\n    data\n  }\n}\n\nexport const sendEmailFailed = (error) => {\n  return {\n    type: SEND_EMAIL_FAILED,\n    error\n  }\n}\n\nexport const sendEmail = (data) => {\n  return dispatch => {\n    dispatch(sendEmailStart());\n    fetch(`/v1/auth/recover`, {\n      method: \"PUT\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(sendEmailFailed(resp.error));\n        dispatch(sendEmailSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(sendEmailFailed(err.message));\n      });\n  }\n}\n\nexport const changePasswordStart = () => {\n  return {\n    type: CHANGE_PASSWORD_START\n  }\n}\n\nexport const changePasswordSuccess = (data) => {\n  return {\n    type: CHANGE_PASSWORD_SUCCESS,\n    data\n  }\n}\n\nexport const changePasswordFailed = (error) => {\n  return {\n    type: CHANGE_PASSWORD_FAILED,\n    error\n  }\n}\n\nexport const changePassword = (data) => {\n  return dispatch => {\n    dispatch(changePasswordStart());\n    fetch(\"/v1/auth/reset_password\", {\n      method: \"PUT\",\n      headers: {\n        ACCEPT: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(sendEmailFailed(resp.error));\n        dispatch(sendEmailSuccess(resp));\n      })\n      .catch(err => {\n        dispatch(sendEmailFailed(err.message));\n      });\n  }\n}","import {\n  SEND_EMAIL_START,\n  SEND_EMAIL_SUCCESS,\n  SEND_EMAIL_FAILED,\n  CHANGE_PASSWORD_START,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAILED,\n} from \"../actions/action_auth\";\n\nconst initialState = {\n  auth: {},\n  loading: false,\n  success: false,\n  error: \"\"\n}\n\nexport const auth = (state=initialState, action) => {\n  switch(action.type) {\n    case SEND_EMAIL_START:\n      return {\n        ...state,\n        loading: true,\n      }\n    case SEND_EMAIL_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        auth: action.data,\n      }\n    case SEND_EMAIL_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        error: action.error\n      }\n    case CHANGE_PASSWORD_START:\n      return {\n        ...state,\n        loading: true,\n      }\n    case CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        auth: action.data,\n      }\n    case CHANGE_PASSWORD_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        error: action.error\n      }\n    default: \n      return state;\n  }\n}","import { localAuth } from \"../../helper/authentcate\";\n\nexport const DELETE_START = \"DELETE_START\";\nexport const DELETE_SUCCESS = \"DELETE_SUCCESS\";\nexport const DELETE_FAILED = \"DELETE_FAILED\";\nexport const GET_START = \"GET_START\";\nexport const GET_SUCCESS = \"GET_SUCCESS\";\nexport const GET_FAILED = \"GET_FAILED\";\n\n\nexport const deleteStart = () => {\n  return {\n    type: DELETE_START\n  }\n}\n\nexport const deleteSuccess = (data) => {\n  return {\n    type: DELETE_SUCCESS,\n    data\n  }\n}\n\nexport const deleteFailed = (error) => {\n  return {\n    type: DELETE_FAILED,\n    error\n  }\n}\n\nexport const deleteCustomer = (customerId) => {\n  return dispatch => {\n    dispatch(deleteStart());\n    fetch(`/v1/customer/delete/${customerId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(deleteFailed(resp.error));\n        dispatch(deleteSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(deleteFailed(err.message));\n      });\n  }\n}\n\nexport const getStart = () => {\n  return {\n    type: GET_START\n  }\n}\n\nexport const getSuccess = (data) => {\n  return {\n    type: GET_SUCCESS,\n    data\n  }\n}\n\nexport const getFailed = (error) => {\n  return {\n    type: GET_FAILED,\n    error\n  }\n}\n\nexport const getCustomer = () => {\n  return dispatch => {\n    dispatch(getStart());\n    fetch(`/v1/customer`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getFailed(resp.error));\n        dispatch(getSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(getFailed(err.message));\n      });\n  }\n}","import {\n  DELETE_START,\n  DELETE_SUCCESS,\n  DELETE_FAILED,\n  GET_START,\n  GET_SUCCESS,\n  GET_FAILED,\n} from \"../actions/action_customer\";\n\nconst initialState = {\n  customers: [],\n  customer: {},\n  loading: false,\n  success: false,\n  error: \"\"\n}\n\nexport const customer = (state=initialState, action) => {\n  switch(action.type) {\n    case DELETE_START:\n      return {\n        ...state,\n        deleteLoading: true\n      }\n    case DELETE_SUCCESS:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: true,\n        customer: action.data\n      }\n    case DELETE_FAILED:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: false,\n        error: action.error\n      }\n    case GET_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case GET_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        customers: action.data,\n      }\n    case GET_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}","import { localAuth } from \"../../helper/authentcate\";\n\nexport const REPORT_START = \"REPORT_START\";\nexport const REPORT_SUCCESS = \"REPORT_SUCCESS\";\nexport const REPORT_FAILED = \"REPORT_FAILED\";\nexport const DELETE_START = \"DELETE_START\";\nexport const DELETE_SUCCESS = \"DELETE_SUCCESS\";\nexport const DELETE_FAILED = \"DELETE_FAILED\";\nexport const GET_START = \"GET_START\";\nexport const GET_SUCCESS = \"GET_SUCCESS\";\nexport const GET_FAILED = \"GET_FAILED\";\n\n\nexport const reportStart = () => {\n  return {\n    type: REPORT_START\n  }\n}\n\nexport const reportSuccess = (data) => {\n  return {\n    type: REPORT_SUCCESS,\n    data\n  }\n}\n\nexport const reportFailed = (error) => {\n  return {\n    type: REPORT_FAILED,\n    error\n  }\n}\n\nexport const sendReport = (data) => {\n  return dispatch => {\n    dispatch(reportStart());\n    fetch(\"/v1/report\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(reportFailed(resp.error));\n        dispatch(reportSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(reportFailed(err.message));\n      });\n  }\n}\n\nexport const deleteStart = () => {\n  return {\n    type: DELETE_START\n  }\n}\n\nexport const deleteSuccess = (data) => {\n  return {\n    type: DELETE_SUCCESS,\n    data\n  }\n}\n\nexport const deleteFailed = (error) => {\n  return {\n    type: DELETE_FAILED,\n    error\n  }\n}\n\nexport const deleteReport = (reportId) => {\n  return dispatch => {\n    dispatch(deleteStart());\n    fetch(`/v1/report/delete/${reportId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(deleteFailed(resp.error));\n        dispatch(deleteSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(deleteFailed(err.message));\n      });\n  }\n}\n\nexport const getStart = () => {\n  return {\n    type: GET_START\n  }\n}\n\nexport const getSuccess = (data) => {\n  return {\n    type: GET_SUCCESS,\n    data\n  }\n}\n\nexport const getFailed = (error) => {\n  return {\n    type: GET_FAILED,\n    error\n  }\n}\n\nexport const getReport = () => {\n  return dispatch => {\n    dispatch(getStart());\n    fetch(`/v1/report`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ACCEPT: \"application/json\",\n        \"x-auth-token\": localAuth().token\n      }\n    })\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.error) return dispatch(getFailed(resp.error));\n        dispatch(getSuccess(resp));\n      })\n      .catch(err => {\n        return dispatch(getFailed(err.message));\n      });\n  }\n}","import {\n  REPORT_START,\n  REPORT_SUCCESS,\n  REPORT_FAILED,\n  DELETE_START,\n  DELETE_SUCCESS,\n  DELETE_FAILED,\n  GET_START,\n  GET_SUCCESS,\n  GET_FAILED,\n} from \"../actions/action_report\";\n\nconst initialState = {\n  reports: [],\n  report: {},\n  loading: false,\n  success: false,\n  getLoading: false,\n  getSuccess: false,\n  deleteLoading: false,\n  deleteSuccess: false,\n  error: \"\"\n}\n\nexport const report = (state=initialState, action) => {\n  switch(action.type) {\n    case REPORT_START:\n      return {\n        ...state,\n        loading: true,\n      }\n    case REPORT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        reports: state.reports.concat(action.data),\n      }\n    case REPORT_FAILED:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        error: action.error\n      }\n    case DELETE_START:\n      return {\n        ...state,\n        deleteLoading: true\n      }\n    case DELETE_SUCCESS:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: true,\n        report: action.data\n      }\n    case DELETE_FAILED:\n      return {\n        ...state,\n        deleteLoading: false,\n        deleteSuccess: false,\n        error: action.error\n      }\n    case GET_START:\n      return {\n        ...state,\n        getLoading: true\n      }\n    case GET_SUCCESS:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: true,\n        reports: action.data,\n      }\n    case GET_FAILED:\n      return {\n        ...state,\n        getLoading: false,\n        getSuccess: false,\n        error: action.error\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { shipment } from \"./reducer_shipment\";\nimport { users } from \"./reducer_user\";\nimport { units } from \"./reducer_unit\";\nimport { auth } from \"./reducer_auth\";\nimport { customer } from \"./reducer_customer\";\nimport { report } from \"./reducer_report\";\n \nexport const rootReducer = combineReducers({\n  shipment,\n  users,\n  units,\n  auth,\n  customer,\n  report\n});","import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n} from 'reactstrap';\nimport Logistic1 from \"../../assets/trolley.jpg\";\nimport Logistic2 from \"../../assets/man-shipping-box.jpg\";\nimport Logistic3 from \"../../assets/shipping-cost.jpg\";\n\nconst items = [\n  {\n    src: Logistic1,\n    altText: 'Slide 1',\n    caption: 'Slide 1'\n  },\n  {\n    src: Logistic2,\n    altText: 'Slide 2',\n    caption: 'Slide 2'\n  },\n  {\n    src: Logistic3,\n    altText: 'Slide 3',\n    caption: 'Slide 3'\n  }\n];\n\nconst HomeCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} style={{\n          width: \"100%\",\n          maxHeight: 220,\n          minHeight: 220\n        }} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n      className=\"carousel\"\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default HomeCarousel;","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\nimport Logo from \"../../assets/logo-dark.png\";\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const styles = {\n    link: {\n      color: \"#fff\"\n    }\n  }\n\n  return (\n    <div>\n      <Navbar className=\"light\" expand=\"md\">\n        <Container>\n        <NavbarBrand style={styles.link} href=\"/\">\n          <img src={Logo} alt=\"Logo\" height=\"50\" />\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} style={{ background: \"#fff\"}}/>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n          \n          </Nav>\n          <NavbarText>\n            <NavLink style={{\n              color: \"#fff\",\n              border: \"1px solid #fff\",\n              padding: 5\n            }} href=\"/request\">\n              Request Quote\n            </NavLink>\n          </NavbarText>\n        </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Row, Container, Col, Button } from \"reactstrap\";\nimport { Divider } from \"antd\";\n\nconst styles = {\n  icon: {\n    fontSize: 26,\n    color: \"#fff\",\n    marginLeft: 13,\n    marginTop: 15,\n    cursor: \"pointer\"\n  },\n  hr: {\n    color: \"#fff\"\n  },\n  button: {\n    border: \"1px solid #ccc\",\n    borderRadius: 0,\n    background: \"#000\",\n    color: \"#fff\",\n    marginTop: 20\n  }\n}\nconst Footer = () => {\n  const getLocation = () => {\n    window.location.href = \"https://www.google.com/maps/dir/6.6203869,3.3691252/swissdarl/@6.5691875,3.3340681,13z/data=!3m1!4b1!4m9!4m8!1m1!4e1!1m5!1m1!1s0x103b8d1ae12720e3:0xf63884eea9bfa197!2m2!1d3.3631325!2d6.5078251\"\n  }\n  return (\n    <div className=\"footer\">\n      <Container>\n        <Row>\n          <Col xs=\"5\" xl=\"10\"></Col>\n          <Col xs=\"7\" xl=\"2\"></Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Col xs=\"12\" xl=\"3\">\n          <p>3, Clegg Lane, Off Western Avenue Ojuelegba, Surulere,  Lagos, Nigeria.</p>\n          <Button style={styles.button} onClick={() => getLocation()}>GET LOCATION</Button>\n          </Col>\n          <Col xs=\"12\" xl=\"3\">\n            <h6 style={{ color: \"#fff\"}}>OFFICES</h6>\n            <Row>\n              <Col xs=\"6\" xl=\"5\" className=\"branches\">\n                <p>Lagos</p>\n                <p>Port Harcourt</p>\n                <p>Abuja</p>\n                <p>Enugu</p>\n                <p>Delta</p>\n                <p>Kano</p>\n                <p>Jos</p>\n              </Col>\n              <Col xs=\"6\" xl=\"5\">\n                  <p>United Kingdom</p>\n                <p>China</p>\n                <p>South Africa</p>\n                <p>Ivory Cost</p>\n                <p>Ghana</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Col, Row, Container } from \"reactstrap\"\nimport HomeCarousel from \"./Carousel\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst Home = () => {\n  return(\n    <div className=\"home\">\n      <Header />\n      <section className=\"wave-container\">\n        <Row className=\"justify-content-center\">\n          <Col xs=\"11\" xl=\"6\" className=\"home-text\">\n            <h1>Welcome to Swissdarl Frieght and Logistics Ltd</h1>\n          </Col>\n        </Row>\n        <svg id=\"curve\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path fill=\"#0099ff\" fill-opacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,149.3C640,171,800,245,960,256C1120,267,1280,213,1360,186.7L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n        </svg>\n      </section>\n      <section className=\"sec2\">\n        <Container>\n          <Row className=\"justify-content-center carou\">\n            <Col xs=\"6\" xl=\"5\"\n              style={{\n                marginTop: -200,\n                maxHeight: \"250px\"\n              }}\n            >\n              <HomeCarousel />\n            </Col>\n          </Row>\n        </Container>\n          <div className=\"fix-img\">\n            <Row className=\"justify-content-center\">\n              <Col xs=\"12\" xl=\"6\" \n                className=\"how-we-work\"\n              >\n                {/* <h4>How We Work</h4> */}\n                <p>\n                  At Swissdarl Frieght and Logistics Ltd, we are committed to providing smart and effective Logistics Solutions for every business. With timed deliveries that offer complete flexibility.\n                </p>\n              </Col>\n            </Row>\n          </div>\n          \n          <Row className=\"justify-content-center btn-cont\">\n            <Col xs=\"5\" xl=\"3\" style={{ minHeight: 250 }}>\n              <Button className=\"quote-btn\">\n                <Link style={{ color: \"#fff\" }} to=\"/request\">Request a Quote</Link>  \n              </Button>\n            </Col>\n          </Row>\n      </section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport { Row, Col } from \"reactstrap\";\n\nconst CompanyInfo = ({\n  companyName,\n  contactLName,\n  contactFName,\n  email,\n  phone,\n  setCompanyName,\n  setContactFName,\n  setContactLName,\n  setEmail,\n  setPhone,\n  errors,\n}) => {\n  return(\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"company\">Company Name</label>\n            <Input \n              placeholder=\"Company name\"\n              value={companyName}\n              id=\"company\"\n              onChange={(e) => setCompanyName(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"companyName\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"6\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"firstName\">Contact first name</label>\n            <Input \n              placeholder=\"Contact first name\"\n              value={contactFName}\n              id=\"firstName\"\n              onChange={(e) => setContactFName(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"contactFName\"]}</span>\n          </div>\n        </Col>\n      </Row>\n      \n      \n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"lastName\">Contact last name</label>\n            <Input \n              placeholder=\"Contact last name\"\n              value={contactLName}\n              id=\"lastName\"\n              onChange={(e) => setContactLName(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"contactLName\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"6\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"email\"]}</span>\n          </div>\n        </Col>\n      </Row>\n      <div className=\"mb-3\">\n        <label htmlFor=\"phone\">Phone Number</label>\n        <Input \n          placeholder=\"Phone\"\n          value={phone}\n          id=\"phone\"\n          onChange={(e) => setPhone(e.target.value)}\n        />\n        <span style={{ color: \"#ff0000\" }}>{errors[\"phone\"]}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default CompanyInfo;","import React from 'react';\n \n// note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to \n// keep file size down\nimport { RegionDropdown } from 'react-country-region-selector';\n \n \n\n \nconst StateList = ({\n  stateName, setState\n}) => {\n  const country = \"Nigeria\";\n  return (\n    <div>\n      {/* <CountryDropdown\n        value={country}\n        onChange={(val) => this.selectCountry(val)} /> */}\n      <RegionDropdown\n        style={{ background: \"#fff\", padding: \"5px\", width: \"100%\" }}\n        country={country}\n        value={stateName}\n        onChange={(val) => setState(val)} />\n    </div>\n  );\n}\n\n\nexport default StateList;\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport { Row, Col } from \"reactstrap\";\nimport StateList from \"../StateList\";\n\nconst PickupInformation = ({\n  pickupAddress,\n  pickupCity,\n  pickupState,\n  destinationAddress,\n  destinationCity,\n  destinationState,\n  setPickupAddress,\n  setPickupCity,\n  setPickupState,\n  setDestination,\n  setDestinationCity,\n  setDestinationState,\n  errors\n}) => {\n  return(\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"pickadd\">Pick-up Address</label>\n            <Input \n              placeholder=\"Pick-up address\"\n              value={pickupAddress}\n              id=\"pickadd\"\n              onChange={(e) => setPickupAddress(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"pickupAddress\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"pickcity\">Pick-up City</label>\n            <Input \n              placeholder=\"Pick-up City\"\n              value={pickupCity}\n              id=\"pickcity\"\n              onChange={(e) => setPickupCity(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"pickupCity\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"pickstate\">Pick-up State</label>\n            <StateList stateName={pickupState} setState={setPickupState} />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"pickupState\"]}</span>\n          </div>\n        </Col>\n      </Row>\n      \n      <Row>\n        \n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"desa\">Destination Address</label>\n            <Input\n              placeholder=\"Destination address\"\n              value={destinationAddress}\n              id=\"desa\"\n              onChange={(e) => setDestination(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"destinationAddress\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"desc\">Destination City</label>\n            <Input \n              placeholder=\"Destination address\"\n              value={destinationCity}\n              id=\"desc\"\n              onChange={(e) => setDestinationCity(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"destinationCity\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"desst\">Destination State</label>\n            <StateList stateName={destinationState} setState={setDestinationState} />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"destinationState\"]}</span>\n          </div>\n        </Col>\n      </Row>\n     \n    </div>\n  )\n}\n\nexport default PickupInformation;","import React from \"react\";\nimport { Input, Row, Col } from 'reactstrap';\n\n\nconst PackageInfo = ({\n  packageInfo,\n  weight,\n  dimension,\n  specialInstruction,\n  numOfPieces,\n  setPackageInfo,\n  setWeight,\n  setNumOfPieces,\n  setDimension,\n  setSpecialInstruction,\n  setUnit,\n  units,\n  errors\n}) => {\n  return(\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"packInf\">Package Information</label>\n            <Input \n              placeholder=\"Package Information\"\n              value={packageInfo}\n              id=\"packInf\"\n              onChange={(e) => setPackageInfo(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"packageInfo\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"num\">Numer of Pieces</label>\n            <Input\n              type=\"number\"\n              placeholder=\"Numer of Pieces\"\n              value={numOfPieces}\n              id=\"num\"\n              min=\"1\"\n              onChange={(e) => setNumOfPieces(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"numOfPieces\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"weight\">Weight</label><br/>\n            <Input\n              value={weight}\n              id=\"weight\"\n              placeholder=\"example 30\"\n              min={1}\n              onChange={(e) => setWeight(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"weight\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"unit\">Select the weight unit</label>\n            <Input id=\"unit\" type=\"select\" onChange={(e) => setUnit(e.target.value)}>\n              <option>Select weight unit</option>\n              {units.map((unit, i) => (\n                <option key={i} value={unit}>{unit}</option>\n              ))}\n            </Input>\n            <span style={{ color: \"#ff0000\" }}>{errors[\"unit\"]}</span>\n          </div>\n        </Col>\n      </Row>\n      \n      \n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"dim\">Dimension</label>\n            <Input\n              id=\"dim\"\n              type=\"text\"\n              placeholder=\"Dimension\"\n              value={dimension}\n              onChange={(e) => setDimension(e.target.value)}\n            />\n            <span style={{ color: \"#ff0000\" }}>{errors[\"dimension\"]}</span>\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"6\">\n        <div className=\"mb-3\">\n        <label htmlFor=\"special\">Special Instruction</label>\n        <Input \n          placeholder=\"Special Instruction\"\n          value={specialInstruction}\n          id=\"special\"\n          onChange={(e) => setSpecialInstruction(e.target.value)}\n        />\n        <span style={{ color: \"#ff0000\" }}>{errors[\"specialInstruction\"]}</span>\n      </div>\n        </Col>\n      </Row>\n     \n    </div>\n  )\n}\n\nexport default PackageInfo;","import React from \"react\";\nimport { Input,  } from \"antd\";\nimport { Row, Col, Card, CardBody} from \"reactstrap\";\n\nconst RequestSummary = ({\n  companyName,\n  contactFName,\n  contactLName,\n  email,\n  phone,\n  pickupAddress,\n  pickupCity,\n  pickupState,\n  destinationAddress,\n  destinationCity,\n  destinationState,\n  packageInfo,\n  weight,\n  dimension,\n  specialInstruction,\n  numOfPieces,\n}) => {\n  return(\n    <div>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <h6 style={{ color: \"#ff0000\" }} className=\"text-center\">\n            Please confirm that the information below is the same as what you have filled and every field is filled. If not, click on the Previous Button below to go back otherwise, click on the Next Button to continue.\n          </h6>\n        </CardBody>\n      </Card>\n      <Row>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"company\">Company Name</label>\n            <Input \n              value={companyName}\n              id=\"company\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"firstName\">Contact first name</label>\n            <Input \n              value={contactFName}\n              id=\"firstName\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"lastName\">Contact last name</label>\n            <Input \n              value={contactLName}\n              id=\"lastName\"\n              readOnly\n            />\n          </div>\n        </Col>\n      </Row>\n      \n      \n      <Row>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"phone\">Phone Number</label>\n            <Input \n              value={phone}\n              id=\"phone\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"pickadd\">Pick-up Address</label>\n            <Input \n              value={pickupAddress}\n              id=\"pickadd\"\n              readOnly\n            />\n          </div>\n        </Col>\n      </Row>\n      \n      <Row>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"pickcity\">Pick-up City</label>\n            <Input \n              value={pickupCity}\n              id=\"pickcity\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"pickstate\">Pick-up State</label>\n            <Input \n              value={pickupState}\n              id=\"pickstate\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"desa\">Destination Address</label>\n            <Input \n              value={destinationAddress}\n              id=\"desa\"\n              readOnly\n            />\n          </div>\n        </Col>\n      </Row>\n     \n      <Row>\n        \n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"desc\">Destination City</label>\n            <Input \n              value={destinationCity}\n              id=\"desc\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"desst\">Destination State</label>\n            <Input \n              value={destinationState}\n              id=\"desst\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"4\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"packInf\">Package Information</label>\n            <Input \n              value={packageInfo}\n              id=\"packInf\"\n              readOnly\n            />\n          </div>\n        </Col>\n      </Row>\n      \n      <Row>\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"num\">Number of Pieces</label>\n            <Input \n              value={numOfPieces}\n              id=\"num\"\n              readOnly\n            />\n          </div>\n        </Col>\n        <Col xs=\"12\" xl=\"3\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"weight\">Weight</label>\n          <Input \n            value={weight}\n            id=\"weight\"\n            readOnly\n          />\n        </div>\n        </Col>\n        <Col xs=\"12\" xl=\"3\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"dimension\">Dimension</label>\n          <Input\n            id=\"dimension\"\n            type=\"text\"\n            value={dimension}\n            readOnly\n          />\n        </div>\n        </Col>\n        <Col xs=\"12\" xl=\"3\">\n          <div className=\"mb-3\">\n            <label htmlFor=\"instruction\">Special Instruction</label>\n            <Input \n              value={specialInstruction}\n              id=\"instruction\"\n              readOnly\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default RequestSummary;","import React, { Component } from 'react';\n// Import the Library\nimport Rave from 'react-flutterwave-rave'\n \nclass Ravepay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.callback = this.callback.bind(this);\n    this.close = this.close.bind(this);\n  }\n \n  callback = (response) => {\n    if (response.data.data.status === \"successful\") {\n      this.props.handleSubmit(true);\n    }\n  }\n \n \n  close = () => {\n    console.log(\"Payment closed\");\n  }\n \n  render() {\n    const { phone, email, amount } = this.props;\n    const pubkey = process.env.REACT_APP_FLWPUBKEY;\n    return (\n      <div className=\"App\" >\n        <Rave\n          pay_button_text=\"Continue\"\n          className=\"button\"\n          payment_method=\"card\"\n          customer_email={email}\n          customer_phone={phone}\n          amount={amount}\n          ravePubKey={pubkey}\n          callback={this.callback}\n          onclose={this.close}\n        />\n      </div>\n    );\n  }\n}\n \nexport default Ravepay;\n \n   ","import React from \"react\";\nimport { Document, Page, View, Text, Image, StyleSheet } from \"@react-pdf/renderer\";\nimport moment from \"moment\";\n\nconst styles = StyleSheet.create({\n  document: {\n    width: 400\n  },\n  page: {\n    paddingLeft: \"30px\",\n    backgroundColor: \"#fff\",\n  },\n  heading: {\n    textAlign: \"center\",\n    color: \"#ff0000\",\n    fontWeight: \"bold\",\n    marginTop: 30,\n    marginBottom: \"20px\"\n  },\n  date: {\n    fontWeight: \"bold\",\n  },\n  text: {\n    paddingLeft: 20,\n    fontSize: 12\n  },\n  salutation: {\n    fontWeight: \"extrabold\",\n    paddingTop: 30,\n    paddingLeft: 20\n  }\n});\n\nconst Receipt = ({ data }) => {\n  return (\n    <Document style={styles.document}>\n      <Page size=\"A4\" style={styles.page}>\n        <View>\n          <Text style={styles.heading}>Swissdarl Freight and Logistics Shipping Receipt.</Text>\n          <Text style={styles.text}>Date: {data && moment(data.createAt).format('MMMM Do YYYY, h:mm:ss a')}</Text>\n          <Text style={styles.text}>Company name: {data && data.companyName}</Text>\n          <Text style={styles.text}>Contact name: {data && data.contactFName} {data && data.contactLName} </Text>\n          <Text style={styles.text}>Email Address: {data && data.email}</Text>\n          <Text style={styles.text}>Phone: {data && data.phone}</Text>\n          <Text style={styles.text}>Pickup address: {data && data.pickupAddress}</Text>\n          <Text style={styles.text}>Pickup City: {data && data.pickupCity}</Text>\n          <Text style={styles.text}>Pickup State: {data && data.pickupState}</Text>\n          <Text style={styles.text}>Destination: {data && data.destinationAddress}</Text>\n          <Text style={styles.text}>Destinaion City: {data && data.destinationCity}</Text>\n          <Text style={styles.text}>Destination State: {data && data.destinationState}</Text>\n          <Text style={styles.text}>Package Information: {data && data.packageInfo}</Text>\n          <Text style={styles.text}>No. of package: {data && data.numOfPieces}</Text>\n          <Text style={styles.text}>Package weight: {data && data.weight}{data && data.unit}</Text>\n          <Text style={styles.text}>Dimension: {data && data.dimension}</Text>\n          <Text style={styles.text}>Shipping Cost: NGN{data && data.amount}</Text>\n          <Text style={styles.text}>Shipping tracking Number: {data && data.trackingNumber}</Text>\n          <Text style={styles.text}>Instruction to our dispatch rider: {data && data.specialInstruction}</Text>\n          {data && data.paid === true ? null : <Text>You will be charged NGN{data.amount} at the point of delivery</Text>}\n        </View>\n        <View style={styles.salutation}>\n          <Text>Thank your for choosing Swissdarl Freight and Logistics.</Text>\n        </View>\n      </Page>\n    </Document>\n  );\n}\n\nexport default Receipt;","import React, { useState, useEffect } from \"react\";\nimport { PDFViewer, StyleSheet } from \"@react-pdf/renderer\";\nimport { Row, Col, Card, CardBody } from \"reactstrap\";\nimport Receipt from \"./Receipt\";\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  viewer: {\n    height: 400,\n    width: \"100%\",\n    marginBottom: 20\n  },\n  h5: {\n    color: \"green\"\n  }\n});\n\nconst DownloadButton = ({ data }) => {\n  const [ show, setShow ] = useState(false);\n  useEffect(() => {\n    setShow(true);\n  }, []); \n\n  return (\n    <Row className=\"justify-content-center\">\n      <Col xs=\"12\" xl=\"8\">\n        <Card>\n          <CardBody>\n            <h5 style={styles.h5}>Your shipping request has been received</h5>\n            <p>Use the download button at the top of the file when your mouse come across it to download your invoice. Ensure to keep it safe for reference purposes</p>\n            <PDFViewer style={styles.viewer}>\n              <Receipt data={data} />\n            </PDFViewer>\n          </CardBody>\n        </Card>\n        \n        {/* <div className=\"mt-4 mb-3 download\" style={styles.buttonContainer}>\n          {show && <PDFDownloadLink\n            document={<Receipt data={data} />}\n            fileName=\"invoice.pdf\"\n            style={{\n              textDecoration: \"none\",\n              padding: \"10px\",\n              color: \"#fff\",\n              backgroundColor: \"#1890ff\",\n              border: \"1px solid #4a4a4a\"\n            }}\n          >\n            {({ blob, url, loading, error }) =>\n              loading ? \"Downloading document...\" : \"Download Pdf\"\n            }\n          </PDFDownloadLink>\n          }\n        </div> */}\n      </Col>\n    </Row>\n  );\n}\n\nexport default DownloadButton;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { \n  Col, \n  Row, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter, \n} from \"reactstrap\";\nimport Header from \"./Header\";\nimport { Steps, Button, Spin } from \"antd\";\nimport CompanyInfo from \"./Forms/CompanyInfo\";\nimport PickupInformation from \"./Forms/PickupInformation\";\nimport PackageInfo from \"./Forms/PackageInfo\";\nimport RequestSummary from \"./Forms/RequestSummary\";\nimport { shipmentTotal } from \"../../helper/calculator\"\nimport Ravepay from \"./Ravepay\";\nimport { requestShipment } from \"../../store/actions/action_shipment\";\nimport { getUnit } from \"../../store/actions/action_units\";\nimport Footer from \"./Footer\";\nimport PrintTemplate from \"react-print\";\nimport DownloadButton from \"./DownloadBtn\";\n\nconst { Step } = Steps;\nconst Quote = () => {\n  const dispatch = useDispatch();\n  const shipment = useSelector((state) => state.shipment);\n  const mainUnit = useSelector(state => state.units);\n  const [ amount, setAmount ] = useState(0);\n  const [ count, setCount ] = useState(0);\n  const [ companyName, setCompanyName ] = useState(\"\");\n  const [ contactFName, setContactFName ] = useState(\"\");\n  const [ contactLName, setContactLName ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ phone, setPhone ] = useState(\"\");\n  const [ pickupAddress, setPickupAddress ] = useState(\"\");\n  const [ destinationAddress, setDestination ] = useState(\"\");\n  const [ pickupState, setPickupState ] = useState(\"\");\n  const [ pickupCity, setPickupCity ] = useState(\"\");\n  const [ destinationState, setDestinationState ] = useState(\"\");\n  const [ destinationCity, setDestinationCity ] = useState(\"\");\n  const [ packageInfo, setPackageInfo ] = useState(\"\");\n  const [ numOfPieces, setNumOfPieces ] = useState(0);\n  const [ weight, setWeight ] = useState(0);\n  const [ unit, setUnit ] = useState(\"\");\n  const [ dimension, setDimension ] = useState(\"\");\n  const [ specialInstruction, setSpecialInstruction ] = useState(\"\");\n  const [ cardOption, setCardOption ] = useState(false);\n  const [ deliveryOption, setDeliveryOption ] = useState(false);\n  const [ errors, setErrors] = useState({});\n  const [ errorMsg, setErrorMsg ] = useState(\"\");\n  const [ modal, setModal] = useState(false);\n  const [ modal1, setModal1 ] = useState(false);\n  const [ newAmount, setNewAmount ] = useState(0);\n  const units = [ \"Kg\", \"Ton\" ];\n  const mainu = mainUnit.units && mainUnit.units;\n\n  const toggle = () => {\n    if (formValidation()) {\n      setModal(true);\n    }\n  };\n\n  const toggle1 = () => {\n    if (formValidation()) {\n      setModal1(!modal1);\n    }\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  }\n\n  const closeModal1 = () => {\n    setModal1(false);\n  }\n\n  useEffect(() => {\n    if (shipment.createSuccess === true) {\n      setErrorMsg(\"\");\n      onClearFields();\n    } else if (shipment.error && shipment.error.length > 0) {\n      setErrorMsg(shipment.error);\n    }\n  }, [ shipment ]);\n\n  useEffect(() => {\n    dispatch(getUnit());\n  }, []);\n\n  const increaseCount = () => {\n    setCount(count + 1);\n  }\n  \n  const decreaseCount = () => {\n    setCount(count - 1);\n    setCardOption(false);\n    setDeliveryOption(false);\n  }\n\n  useEffect(() => {\n    mainu.forEach(m => {\n      if (m.unit && m.unit.toLowerCase() === unit.toLowerCase()) {\n        setNewAmount(m.amount);\n      }\n    });\n  }, [ unit ]);\n\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [\n    companyName,\n    contactFName,\n    contactLName,\n    email,\n    phone,\n    dimension,\n    weight,\n    pickupAddress,\n    destinationAddress,\n    pickupState,\n    pickupCity,\n    destinationState,\n    destinationCity,\n    packageInfo,\n    numOfPieces,\n    specialInstruction,\n    deliveryOption\n  ]);\n\n  useEffect(() => {\n    setAmount(shipmentTotal(numOfPieces, weight, newAmount));\n  }, [ dimension, count ]);\n\n  const formValidation = () => {\n    let formValid = true;\n    let errors = {};\n\n    if (companyName === \"\") {\n      formValid = false;\n      errors[\"companyName\"] = \"Company name is required\";\n      setErrorMsg(\"Company name is required\");\n    } else if (typeof companyName === \"number\") {\n      formValid = false;\n      errors[\"companyName\"] = \"Invalid entry. Company name must be alphabets\";\n      setErrorMsg(\"Invalid entry. Company name must be alphabets\");\n    } else if (!contactFName || typeof contactFName === \"number\") {\n      formValid = false;\n      errors[\"contactFName\"] = \"Contact first name is required\";\n      setErrorMsg(\"Contact first name is required\");\n    } else if (contactLName === \"\" || typeof contactLName === \"number\") {\n      formValid = false;\n      errors[\"contactLName\"] = \"Contact last name is required\";\n      setErrorMsg(\"Contact last name is required\");\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      formValid = false;\n      errors[\"email\"] = \"You have entered an invalid email\";\n      setErrorMsg(\"You have entered an invalid email\");\n    } else if (!phone) {\n      formValid = false;\n      errors[\"phone\"] = \"Phone number is required\";\n      setErrorMsg(\"Phone number is required\");\n    } else if (!pickupAddress) {\n      formValid = false;\n      errors[\"pickupAddress\"] = \"Pick-up address is required\";\n      setErrorMsg(\"Pick-up address is required\");\n    } else if (!destinationAddress) {\n      formValid = false;\n      errors[\"destinationAddress\"] = \"Destination address is required\";\n      setErrorMsg(\"Destination address is required\");\n    } else if (!pickupState) {\n      formValid = false;\n      errors[\"pickupState\"] = \"Pick-up state is required\";\n      setErrorMsg(\"Pick-up state is required\");\n    } else if (!pickupCity) {\n      formValid = false;\n      errors[\"pickupCity\"] = \"Pick-up city is required\";\n      setErrorMsg(\"Pick-up city is required\");\n    } else if (!destinationState) {\n      formValid = false;\n      errors[\"destinationState\"] = \"Destination state is required\";\n      setErrorMsg(\"Destination state is required\");\n    } else if (!destinationCity) {\n      formValid = false;\n      errors[\"destinationCity\"] = \"Destination city is required\";\n      setErrorMsg(\"Destination city is required\");\n    } else if (!packageInfo) {\n      formValid = false;\n      errors[\"packageInfo\"] = \"Package description is required\";\n      setErrorMsg(\"Package description is required\");\n    } else if (!numOfPieces) {\n      formValid = false;\n      errors[\"numOfPieces\"] = \"Number of pieces is required\";\n      setErrorMsg(\"Number of pieces is required\");\n    } else if (!weight) {\n      formValid = false;\n      errors[\"weight\"] = \"The weight of the shipment in kg or tons is required\";\n      setErrorMsg(\"The weight of the shipment in kg or tons is required\");\n    } else if (!dimension) {\n      formValid = false;\n      errors[\"dimension\"] = \"The shipment dimension is required\";\n      setErrorMsg(\"The shipment dimension is required\");\n    } else if (!specialInstruction) {\n      formValid = false;\n      errors[\"specialInstruction\"] = \"Leave a special instruction for the shipment\";\n      setErrorMsg(\"Leave a special instruction for the shipment\")\n    } else if (!unit) {\n      formValid = false;\n      errors[\"unit\"] = \"The unit of the weight is required\";\n      setErrorMsg(\"The unit of the weight is required\");\n    }\n\n    setErrors(errors);\n    return formValid;\n  }\n  \n  const handleSubmit = (paid=\"\") => {\n    if (formValidation()) {\n      const data = {\n        companyName,\n        contactFName,\n        contactLName,\n        phone,\n        email,\n        pickupAddress,\n        pickupState,\n        pickupCity,\n        destinationState,\n        destinationAddress,\n        destinationCity,\n        weight,\n        dimension,\n        packageInfo,\n        specialInstruction,\n        amount,\n        numOfPieces,\n        unit,\n        paid: paid ? paid : false\n      }\n\n      dispatch(requestShipment(data));\n    }\n    \n  }\n\n  const onClearFields = () => {\n    setCompanyName(\"\");\n    setContactFName(\"\");\n    setContactLName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setPackageInfo(\"\");\n    setPickupAddress(\"\");\n    setPickupCity(\"\");\n    setPickupState(\"\");\n    setDestination(\"\");\n    setDestinationState(\"\");\n    setDestinationCity(\"\");\n    setSpecialInstruction(\"\");\n    setNumOfPieces(\"\");\n    setWeight(\"\");\n    setDimension();\n  }\n\n  const receiptData = shipment.shipments && shipment.shipments[0];\n  return (\n    <div className=\"quote\">\n      <Header />\n      <div className=\"background-cover\">\n        <section className=\"wave-container\">\n          <Row className=\"justify-content-center\">\n            <Col xs=\"8\" xl=\"6\" className=\"home-text\">\n              <h1>Request a Shipping Quote Here</h1>\n            </Col>\n          </Row>\n          <svg id=\"curve\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n            <path fill=\"#0099ff\" fillOpacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,149.3C640,171,800,245,960,256C1120,267,1280,213,1360,186.7L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n          </svg>\n        </section>\n      </div>\n        {shipment.createSuccess === true ? (<DownloadButton data={receiptData} />) : (\n          <>\n            <Row className=\"justify-content-center mb-2\">\n              <Col xs=\"11\" xl=\"8\">\n                <h3 className=\"text-center\">REQUEST A QUOTE HERE</h3>\n                <p className=\"text-center mb-3\">Enjoy affordable shipping rates on all your deliveries when you choose Swissdarl Express Logistics. We offer exceptional service at unbeatable prices. To request a quote, please fill out the form below and a team member will contact you. Please note that quotes requested after 5:00 p.m. GMT will be responded to the next business day. If you need immediate assistance please call +234-906-2011-107 (8:00 am - 5:00 pm) and we’ll be happy to help you.</p>\n                <p className=\"text-center\">Our services cover the following states: Lagos, Port Harcourt, Abuja, Kano, Delta, Enugu and Jos </p>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              <Col xs=\"10\" xl=\"9\" className=\"steps\">\n                <Steps current={count} size=\"small\">\n                  <Step title={count === 0 ? \"In Progess\" : \"Finished\"} description=\"Company Information\" />\n                  <Step title={count < 1 ? \"Waiting\" : count === 1 ? \"In Progress\" : \"Finished\"}  description=\"Pick-up and Delivery Information.\" />\n                  <Step title={count < 2 ? \"Waiting\" : count === 2 ? \"In Progress\" : \"Finished\"} description=\"Package Information\" />\n                  <Step title={count < 3 ? \"Waiting\" : count === 3 ? \"In Progress\" : \"Finished\"} description=\"Quote Summary\" />\n                  <Step title={count < 4 ? \"Waiting\" : count === 4 ? \"In Progress\" : \"Finished\"} description=\"Payment Options\" />\n                </Steps>\n              </Col>\n            </Row>\n            \n            <Row className=\"justify-content-center mt-4\">\n              <Col xs=\"9\" xl=\"8\">\n                {count === 0 ? \n                  <CompanyInfo\n                    companyName={companyName} \n                    setCompanyName={setCompanyName}\n                    contactFName={contactFName}\n                    setContactFName={setContactFName}\n                    contactLName={contactLName}\n                    setContactLName={setContactLName}\n                    email={email}\n                    setEmail={setEmail}\n                    phone={phone}\n                    setPhone={setPhone}\n                    errors={errors}\n                  /> : \n                  count === 1 ? \n                  <PickupInformation \n                    pickupAddress={pickupAddress}\n                    pickupCity={pickupCity}\n                    pickupState={pickupState}\n                    destinationAddress={destinationAddress}\n                    destinationCity={destinationCity}\n                    destinationState={destinationState}\n                    setPickupAddress={setPickupAddress}\n                    setPickupCity={setPickupCity}\n                    setPickupState={setPickupState}\n                    setDestination={setDestination}\n                    setDestinationCity={setDestinationCity}\n                    setDestinationState={setDestinationState}\n                    errors={errors}\n                  /> : \n                  count === 2 ? \n                  <PackageInfo\n                    packageInfo={packageInfo}\n                    weight={weight}\n                    dimension={dimension}\n                    specialInstruction={specialInstruction}\n                    numOfPieces={numOfPieces}\n                    setPackageInfo={setPackageInfo}\n                    setWeight={setWeight}\n                    setUnit={setUnit}\n                    units={units}\n                    unit={unit}\n                    setNumOfPieces={setNumOfPieces}\n                    setDimension={setDimension}\n                    setSpecialInstruction={setSpecialInstruction}\n                    errors={errors}\n                  /> : \n                  count === 3 ?\n                  <RequestSummary\n                    companyName={companyName}\n                    contactFName={contactFName}\n                    contactLName={contactLName}\n                    email={email}\n                    phone={phone}\n                    pickupAddress={pickupAddress}\n                    pickupCity={pickupCity}\n                    pickupState={pickupState}\n                    destinationAddress={destinationAddress}\n                    destinationCity={destinationCity}\n                    destinationState={destinationState}\n                    packageInfo={packageInfo}\n                    weight={weight}\n                    dimension={dimension}\n                    specialInstruction={specialInstruction}\n                    numOfPieces={numOfPieces}\n                  /> : cardOption === true ? (\n                  <Row className=\"justify-content-center\">\n                    <Col xs=\"3\" xl=\"3\">\n                      \n                    </Col>\n                  </Row>\n                ) : deliveryOption === true ? (\n                  <>\n                    <Row className=\"justify-content-center\">\n                      <Col xs=\"3\" xl=\"3\">\n                      <Button \n                        type=\"primary\"\n                        onClick={() => handleSubmit()}\n                      >Submit</Button>\n                      </Col>\n                    </Row>\n                  </>\n                ) : (\n                  <Row className=\"justify-content-center\">\n                    <Col xs=\"10\" xl=\"5\">\n                      {errorMsg.length ? <h4 style={{ color: \"#ff0000\"}}>{errorMsg}</h4> : null}\n                      <h3>Select a Payment Option</h3>\n                      <p>Your total shipping cost is: <span style={{ \n                          color: \"#ff0000\",\n                          fontSize: \"14px\"\n                        }}>&#8358;{amount}</span></p>\n                      <Row>\n                        <Col xs=\"6\" xl=\"6\">\n                          <Button color=\"danger\" onClick={toggle1}>Pay with card</Button>\n                          <Modal isOpen={modal1} toggle1={toggle1}>\n                            <ModalHeader toggle={closeModal1}>Modal title</ModalHeader>\n                            <ModalBody>\n                              {errorMsg.length ? <p style={{\n                                marginTop: 20,\n                                color: \"#ff0000\"\n                              }}>{errorMsg}</p> : shipment.createSuccess === true ? \n                            ( \n                              <PrintTemplate>\n                                <p style={{\n                                  marginTop: 20,\n                                  color: \"#00ff00\"\n                                }}>Request success!! Your shipping tracking number is: <span style={{\n                                  fontWeight: \"bolder\",\n                                  color: \"#ff0000\"\n                                }}>{shipment.shipments[0].trackingNumber}</span>. Please keep it safe. Thank you for choosing Swissdarl Frieght and Logistics Ltd.</p>\n                              </PrintTemplate>\n                              ) :\n                              <p style={{\n                                marginTop: 20\n                              }}>Your credit card will be charged <span style={{\n                                fontWeight: \"bold\",\n                                color: \"#ff0000\"\n                              }}>NGN{amount}</span> for shipping cost. To continue click CONTINUE else click CANCEL</p> }\n                              \n                            </ModalBody>\n                            <ModalFooter>\n                              <Ravepay \n                                amount={amount} \n                                disabled={errorMsg.length > 0}\n                                email={email} \n                                name={companyName}\n                                handleSubmit={handleSubmit}\n                                phone={phone}\n                              />\n                              <Button color=\"secondary\" onClick={closeModal1}>Cancel</Button>\n                            </ModalFooter>\n                          </Modal>\n                        </Col>\n                        <Col xs=\"6\" xl=\"6\">\n                          <Button color=\"danger\" onClick={toggle}>Pay on Delivery</Button>\n                          <Modal isOpen={modal} toggle={toggle}>\n                            <ModalHeader toggle={closeModal}>Modal title</ModalHeader>\n                            <ModalBody>\n                            {errorMsg.length ? <p style={{\n                                marginTop: 20,\n                                color: \"#ff0000\"\n                              }}>{errorMsg}</p> : shipment.createSuccess === true ?  <p style={{\n                                marginTop: 20,\n                              }}>Request success!! Your shipping tracking number is: <span style={{\n                                fontWeight: \"bolder\",\n                                color: \"#ff0000\"\n                              }}>{shipment.shipments[0].trackingNumber}</span>. Please keep it safe. Thank you for choosing Swissdarl Frieght and Logistics Ltd.</p> : <p style={{\n                                marginTop: 20\n                              }}>You will be charged <span style={{ \n                                color: \"#ff0000\",\n                                fontWeight: \"bold\"\n                              }}>NGN{amount}</span> at the point of delivery as shipping cost. Click CONTINUE to proceed or CANCEL to abort request.</p>}\n                              \n                            </ModalBody>\n                            <ModalFooter>\n                              {shipment.createLoading === true ? \n                                <Spin tip=\"Processing...\" /> : (\n                                <Button \n                                  color=\"primary\" \n                                  disabled={errorMsg.length > 0}\n                                  onClick={() => handleSubmit(false)}>\n                                    Continue\n                                </Button>\n                                )\n                              }\n                              <Button color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                            </ModalFooter>\n                          </Modal>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                )}\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center mb-5 mt-5\">\n              <Col xs=\"9\" xl=\"6\">\n                <Row>\n                  <Col xs=\"6\" xl=\"6\">\n                    <Button \n                      type=\"primary\"\n                      disabled={count === 0}\n                      onClick={() => decreaseCount()}\n                    >Previous</Button>\n                  </Col>\n                  <Col xs=\"6\" xl=\"6\">\n                    <Button \n                      type=\"primary\"\n                      disabled={count === 4}\n                      onClick={() => increaseCount()}\n                      style={{\n                        float: \"right\"\n                      }}\n                    >Next</Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </>\n        )}\n      <Footer />\n    </div>\n  )\n}\n\nexport default Quote;","\nexport const shipmentTotal = (pieces, weight, amount) => {\n  const charge = pieces * weight * amount;\n   \n  return charge;\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu } from 'antd';\nimport {\n  DashboardOutlined,\n  SettingOutlined,\n  UsergroupAddOutlined,\n  DollarOutlined,\n  CarOutlined,\n  FormOutlined,\n} from '@ant-design/icons';\nimport { Col, Row } from \"reactstrap\";\n\nconst { Sider } = Layout;\n\nconst SideBar =({ collapsed, onCollapse }) => {\n  return (\n    <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n      <Row className=\"\" style={{\n        position: \"relative\",\n        top: 40\n      }}>\n        <Col xs=\"3\" xl=\"3\">\n            <div className=\"sy-side\">SY</div>\n        </Col>\n        <Col xs=\"12\" xl=\"5\">\n            <Row>\n                <Col><p style={{\n                  fontSize: 12\n                }}>System Administration</p></Col>\n            </Row>\n            \n        </Col>\n    </Row>\n    <div className=\"logo\" />\n    <Menu theme=\"dark\" style={{ marginTop: 0 }} defaultSelectedKeys={['1']} mode=\"inline\">\n      <Menu.Item key=\"1\">\n        <DashboardOutlined />\n        <span><Link to=\"/dashboard\" style={{ color: \"#fff\"}}>Dashboard</Link></span>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <UsergroupAddOutlined />\n        <span><Link style={{ color: \"#fff\" }} to=\"/dashboard/customers\">Customer List</Link></span>\n      </Menu.Item>\n      <Menu.Item key=\"3\">\n        <CarOutlined />\n        <span><Link style={{ color: \"#fff\" }} to=\"/dashboard/shipments\">Shipment List</Link></span>\n      </Menu.Item>\n      <Menu.Item key=\"4\">\n        <UsergroupAddOutlined />\n        <span><Link style={{ color: \"#fff\" }} to=\"/dashboard/users\">Employee List</Link></span>\n      </Menu.Item>\n      <Menu.Item key=\"5\">\n        <DollarOutlined />\n        <span><Link style={{ color: \"#fff\" }} to=\"/dashboard/transactions\">Transactions</Link></span>\n      </Menu.Item>\n      <Menu.Item key=\"6\">\n        <FormOutlined />\n        <span><Link style={{ color: \"#fff\" }} to=\"/dashboard/reports\">Report</Link></span>\n      </Menu.Item>\n      <Menu.Item key=\"7\">\n        <SettingOutlined />\n        <span><Link style={{ color: \"#fff\" }} to=\"/dashboard/settings\">Settings</Link></span>\n      </Menu.Item>\n    </Menu>\n  </Sider>\n  )\n}\n\nexport default SideBar;","import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 5\n}\n\nclass Paginations extends React.Component {\n  constructor( props ) {\n    super( props );\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // set page if items array isn't empty\n    if ( this.props.items && this.props.items.length ) {\n      this.setPage( this.props.initialPage );\n    }\n  }\n\n  componentDidUpdate( prevProps, prevState ) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage( this.props.initialPage );\n    }\n  }\n\n  setPage( page ) {\n    var { items, pageSize } = this.props;\n    var pager = this.state.pager;\n\n    if ( page < 1 || page > pager.totalPages ) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager( items.length, page, pageSize );\n\n    // get new page of items from items array\n    var pageOfItems = items.slice( pager.startIndex, pager.endIndex + 1 );\n\n    // update state\n    this.setState( { pager: pager } );\n\n    // call change page function in parent component\n    this.props.onChangePage( pageOfItems, pager );\n  }\n\n  getPager( totalItems, currentPage, pageSize ) {\n    // default to first page\n    currentPage = currentPage || 1;\n\n    // default page size is 10\n    pageSize = pageSize || 10;\n\n    // calculate total pages\n    var totalPages = Math.ceil( totalItems / pageSize );\n\n    var startPage, endPage;\n    if ( totalPages <= 10 ) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if ( currentPage <= 6 ) {\n        startPage = 1;\n        endPage = 10;\n      } else if ( currentPage + 4 >= totalPages ) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    var startIndex = ( currentPage - 1 ) * pageSize;\n    var endIndex = Math.min( startIndex + pageSize - 1, totalItems - 1 );\n\n    // create an array of pages to ng-repeat in the pager control\n    var pages = [ ...Array( ( endPage + 1 ) - startPage ).keys() ].map( i => startPage + i );\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    var pager = this.state.pager;\n\n    if ( !pager.pages || pager.pages.length <= 1 ) {\n      return null;\n    }\n\n    return (\n      <Pagination aria-label=\"Page navigation example\">\n        <PaginationItem className={pager.currentPage === 1 ? 'disabled' : ''}>\n          <PaginationLink previous onClick={() => this.setPage( pager.currentPage - 1 )}>Previous</PaginationLink>\n        </PaginationItem>\n        {pager.pages.map( ( page, index ) =>\n          <PaginationItem key= { index } className = { pager.currentPage === page ? 'active' : '' }>\n            <PaginationLink onClick={() => this.setPage( page )}>\n              {page}\n            </PaginationLink>\n          </PaginationItem>\n        )}\n        <PaginationItem className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n          <PaginationLink next onClick={() => this.setPage( pager.currentPage + 1 )}>Next</PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\n// Pagination.propTypes = propTypes;\nPaginations.defaultProps = defaultProps;\nexport default Paginations;","import React from \"react\";\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst Search = ({\n  handleSearch,\n  handleKeyPress,\n  searchTerm,\n  setSearchTerm\n}) => {\n  return (\n    <div className=\"mb-3\">\n      <InputGroup>\n          <Input\n            placeholder=\"Search by phone number\"\n            value={searchTerm}\n            onChange={( e ) => setSearchTerm( e.target.value )}\n            onKeyPress={(e) => handleKeyPress(e)}\n            style={{\n              border: \"none\",\n              borderTopLeftRadius: 25,\n              borderBottomLeftRadius: 25,\n              height: \"100%\",\n              padding: 15,\n            }}\n          />\n          <InputGroupAddon\n            addonType=\"append\"\n          >\n            <Button\n              onClick={() => handleSearch()}\n              color=\"secondary\"\n              style={{\n                height: \"100%\",\n                width: \"80px\",\n                borderBottomRightRadius: 26,\n                borderTopRightRadius: 26,\n                background: \"#20a8d8\",\n                border: \"none\"\n              }}\n            >\n              <SearchOutlined style={{ color: \"#fff\"}} />\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipments, shipmentDelete, searchShipment } from \"../../store/actions/action_shipment\";\nimport { Table, Row, Col, Card, CardBody, Badge } from 'reactstrap';\nimport { message, Spin,  } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Paginations from \"../pages/Pagination\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { localAuth } from \"../../helper/authentcate\";\nimport Search from \"./Search\";\n\n\nconst Shipments = (props) => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const [ pageOfItems, setPageOfItems ] = useState([]);\n  const [ data, setData ] = useState([]);\n  const [ searchTerm, setSearchTerm ] = useState(\"\");\n  // const [ message, setMessage ] = useState(\"\")\n  const userRole = localAuth().user && localAuth().user.role;\n\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  useEffect(() => {\n    dispatch(getShipments());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    setData(shipment.shipments);\n  }, [shipment]);\n\n  useEffect(() => {\n    if (shipment.shipments && shipment.shipments.quote) {\n      setPageOfItems(shipment.shipments.quote)\n    }\n    \n  }, [ shipment ])\n\n  const onChangePage = (pageOfItems) => {\n    setPageOfItems(pageOfItems);\n  }\n\n  const onDelete = (id) => {\n    dispatch(shipmentDelete(id));\n  }\n\n  useEffect(() => {\n    if (shipment.error) {\n      error(shipment.error);\n    }\n  }, [ shipment ]);\n\n  const handleSearch = async () => {\n    dispatch(searchShipment(searchTerm));\n    setSearchTerm(\"\");\n  }\n\n  const handleKeyPress = ( e ) => {\n    if ( e.key === \"Enter\" ) {\n      dispatch(searchShipment( searchTerm ));\n      setSearchTerm(\"\");\n    }\n  }\n\n  const dataSource = shipment.shipments && shipment.shipments;\n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Search \n            handleKeyPress={handleKeyPress}\n            handleSearch={handleSearch}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n          />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"15px\"\n            }}>All Shipments</h5>\n            <CardBody>\n              {shipment.getLoading === true ? (\n                <div className=\"text-center\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"43%\"\n                  }}\n                >\n                  <Spin tip=\"Loading...\" />\n                </div>\n              ) : (\n                <Table responsive hover>\n                  <thead>\n                    <tr>\n                      <th>S/N</th>\n                      <th>Company Name</th>\n                      <th>Contact Name</th>\n                      <th>Email</th>\n                      <th>Phone</th>\n                      <th>Tracking Number</th>\n                      <th>Status</th>\n                      <th>Action</th>\n                      {userRole === \"super_admin\" ? <th>Delete</th> : null}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pageOfItems && pageOfItems.length > 0 ? pageOfItems.map((data, i) => (\n                      <tr key={data._id}>\n                        <th scope=\"row\">{i + 1}</th>\n                        <td style={{ fontSize: 10 }}>{data.companyName}</td>\n                        <td style={{ fontSize: 10 }}>{data.contactFName} {data.contactLName}</td>\n                        <td style={{ fontSize: 10 }}>{data.email}</td> \n                        <td style={{ fontSize: 10 }}>{data.phone}</td>\n                        <td style={{ fontSize: 10 }}>{data.trackingNumber}</td>\n                        <td>\n                          {data.status === \"delivered_to_driver\" ? \"Deliver to driver\" : data.status === \"delivered_to_receiver\" ? \"Delivered to receiver\" : data.status === \"returned\" ? \"Returned\" : data.status.charAt(0).toUpperCase() + data.status.slice(1)}\n                        </td>\n                        <td style={{ fontSize: 10 }}>\n                          <span>{data.isView === false ? <Badge color=\"success\">New</Badge> : null}</span> <Link to={`${props.match.url}/${data._id}`}>View</Link> \n                        </td>\n                        <td>\n                          {userRole === \"super_admin\" ? (\n                            shipment.deleteLoading === true ? (\n                              <Spin />\n                            ) : (\n                              <DeleteOutlined \n                                style={{ color: \"#ff0000\"}}\n                                onClick={() => onDelete(data._id)}\n                              />\n                            )\n                          ) : null}\n                        </td>\n                      </tr>\n                    )) : <p className=\"text-center\" style={{ color: \"#333\" }}>No records found</p>}\n                  </tbody>\n                </Table>\n              )}\n               \n              {dataSource && dataSource.length > 0 ? (\n                <Paginations\n                  items={data}\n                  onChangePage={onChangePage}\n                />\n              ) : null}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Shipments;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipment, view, approve, changeStatus } from \"../../store/actions/action_shipment\";\nimport { Row, Col, Card, CardBody, Table } from \"reactstrap\";\nimport { Spin, Button } from \"antd\";\nimport { localAuth } from \"../../helper/authentcate\";\n\nconst ShipmentDetails = () => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const shipmentId = window.location.pathname.slice(21, 45);\n\n  useEffect(() => {\n    dispatch(getShipment(shipmentId));\n  }, [ dispatch, shipmentId ]);\n\n  useEffect(() => {\n    dispatch(view(shipmentId));\n  }, [ dispatch ]);\n\n  const handleStatus = (status) => {\n    dispatch(changeStatus(status, shipmentId));\n  }\n\n  const role = localAuth().user && localAuth().user.role;\n  const shipmentDetails = shipment.shipment;\n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            <h5 style={{\n                  color: \"#1890ff\",\n                  padding: \"10px\"\n                }}>Shipment details</h5>\n            <CardBody>\n              {shipment.getLoading === true ? (\n                <div className=\"text-center\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"43%\"\n                  }}\n                >\n                  <Spin tip=\"Loading...\" />\n                </div>\n              ) : (\n                <>\n                <Row>\n                  <Table responsive bordered style={{ fontSize: 12 }}>\n                    <thead>\n                      <tr>\n                        <th>Company Name</th>\n                        <th>Contact name</th>\n                        <th>Email</th>\n                        <th>Phone</th>\n                        <th>Pick-up Address</th>\n                        <th>Pick-up City</th>\n                        <th>Pick-up State</th>\n                        <th>Destination Address</th>\n                        <th>Paid</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>{shipmentDetails.companyName}</td>\n                        <td>{shipmentDetails.contactFName} {shipmentDetails.contactLName}</td>\n                        <td>{shipmentDetails.email}</td>\n                        <td>{shipmentDetails.phone}</td>\n                        <td>{shipmentDetails.pickupAddress}</td>\n                        <td>{shipmentDetails.pickupCity}</td>\n                        <td>{shipmentDetails.pickupState}</td>\n                        <td>{shipmentDetails.destinationAddress}</td>\n                        <td>{shipmentDetails.paid === false ? \"True\" : \"False\"}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                  \n                </Row>\n                \n                <Row>\n                  <Table responsive bordered style={{ fontSize: 12 }}>\n                    <thead>\n                      <tr>\n                        <th>Destination City</th>\n                        <th>Destination State</th>\n                        <th>Payment Type</th>\n                        <th>Package Information</th>\n                        <th>No. of Pieces</th>\n                        <th>Weight</th>\n                        <th>Dimension</th>\n                        <th>Shipping Cost</th>\n                        <th>Delivery Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>{shipmentDetails.destinationCity}</td>\n                        <td>{shipmentDetails.destinationState}</td>\n                        <td>{shipmentDetails.paid === false ? \"Pay on delivery\" : \"Debit Card\"}</td>\n                        <td>{shipmentDetails.packageInfo}</td>\n                        <td>{shipmentDetails.numOfPieces}</td>\n                        <td>{shipmentDetails.weight}</td>\n                        <td>{shipmentDetails.dimension}</td>\n                        <td>NGN{shipmentDetails.amount}</td>\n                        <td>\n                          {shipmentDetails.status === \"delivered_to_driver\" ? \"Deliver to driver\" : shipmentDetails.status === \"delivered_to_receiver\" ? \"Delivered to receiver\" : shipmentDetails.status === \"returned\" ? \"Returned\" : shipmentDetails.status === \"delayed\" ? \"Delayed\" : shipmentDetails.status && shipmentDetails.status.charAt(0).toUpperCase() + shipmentDetails.status.slice(1)}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </Row>\n                </>\n              )}\n              {role === \"admin\" && shipmentDetails.status !== \"delivered_to_receiver\" ? (\n                <Row className=\"justify-content-center mt-5\">\n                  <Col xs=\"10\" xl=\"8\">\n                    <Row>\n                      <Col xs=\"12\" xl=\"3\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                          <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button style={{\n                            background: \"green\",\n                            color: \"#fff\"\n                          }}\n                            onClick={() => handleStatus(\"delivered_to_driver\")}\n                          >Delivered to driver</Button>\n                        )}\n                        \n                      </Col>\n                      <Col xs=\"12\" xl=\"3\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                          <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button \n                            type=\"primary\"\n                            onClick={() => handleStatus(\"delivered_to_receiver\")}\n                          >Delivered to receiver</Button>\n                        )}\n                      </Col>\n                      <Col xs=\"12\" xl=\"2\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                            <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button style={{\n                            background: \"blue\",\n                            color: \"#fff\"\n                          }}\n                          onClick={() => handleStatus(\"returned\")}\n                          >Returned</Button>\n                        )}\n                        \n                      </Col>\n                      {/* <Col xs=\"3\" xl=\"2\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                            <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button style={{\n                            background: \"orange\",\n                            color: \"#fff\"\n                          }}\n                          onClick={() => handleStatus(\"delayed\")}\n                          >Delayed</Button>\n                        )}\n                        \n                      </Col> */}\n                      <Col xs=\"12\" xl=\"2\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                            <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button type=\"danger\" onClick={() => handleStatus(\"rejected\")}>Rejected</Button>\n                        )}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              ) : null}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ShipmentDetails;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Layout, Spin } from \"antd\";\nimport Auth from \"../../helper/Auth\";\nimport { localAuth } from \"../../helper/authentcate\";\nimport { LogoutOutlined, ClockCircleOutlined } from \"@ant-design/icons\";\nimport { logout } from \"../../store/actions/action_user\";\nimport { getShipments } from \"../../store/actions/action_shipment\";\nimport { Col, Row, Badge } from \"reactstrap\";\nimport Flag from \"../../assets/ngn-flag.jpg\";\n\nconst { Header } = Layout;\n\nconst DashboardHeader = () => {\n  const user = useSelector((state) => state.users);\n  const shipments = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const username = localAuth().user && localAuth().user.fullname;\n  const newShipments = shipments.shipments && shipments.shipments.filter(shipment => shipment.isView === false);\n  const onLogout = () => {\n    dispatch(logout());\n  }\n\n  useEffect(() => {\n    if (user.logoutSuccess === true) {\n      Auth.deauthenticateUser();\n      window.location.href = \"/accountl\";\n    }\n  }, [ user ]);\n\n  useEffect(() => {\n    dispatch(getShipments())\n  }, [ dispatch ]);\n\n  return (\n    <>\n    <Header className=\"site-layout-background\">\n      <Row>\n        <Col xs=\"12\" xl=\"5\">\n          <ClockCircleOutlined style={{\n            color: \"#fff\",\n            fontSize: \"25px\"\n          }} /> <span style={{ color: \"#fff\", marginLeft: 15 }}>{moment().format('MMMM Do YYYY, h:mm:ss a')}</span>\n        </Col>\n        <Col xs=\"12\" xl=\"7\">\n          <div className=\"text-right\" style={{\n              color: \"#fff\"\n            }}\n          >\n            <span style={{ marginRight: 25}} className=\"color-badge\">\n              {newShipments && newShipments.length > 0 ? (\n                <a href=\"/dashboard/shipments/new\">\n                  <Badge style={{\n                    position: \"relative\",\n                    top: \"-15px\",\n                    left: 25,\n                    background: \"red\",\n                    borderRadius: 25,\n                    padding: 5,\n                    width: 20,\n                    height: 20\n                  }}>\n                    {newShipments && newShipments.length}\n                  </Badge>\n                </a>\n              ) : null}\n              \n              <Spin />\n            </span>\n            \n            <img src={Flag} alt=\"flag\" style={{ \n                width: 23, height: 20,\n                marginRight: 17\n              }} \n              className=\"flag\"\n            />\n            <span>Hi, {username}</span> <LogoutOutlined style={{ marginLeft: \"15px\", marginRight: 10 }} onClick={() => onLogout()} /><span className=\"sy-header\">SY</span>\n          </div>\n        </Col>\n      </Row>\n    </Header>\n    <Header className=\"site-layout-background second\" style={{ background: \"#fff\" }}>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <span style={{ color: \"#333\" }}><strong>Dashboard</strong> <span style={{\n            marginLeft: \"15px\"\n          }}>Overview on your system |</span></span>\n        </Col>\n        <Col xs=\"12\" xl=\"6\">\n          \n        </Col>\n      </Row>\n    </Header>\n    </>\n  );\n}\n\nexport default DashboardHeader;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, CardBody, Col, Row, Table } from \"reactstrap\";\nimport { getUsers, role, deleteUser } from \"../../store/actions/action_user\";\nimport { Spin, message } from \"antd\";\nimport { localAuth } from \"../../helper/authentcate\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nconst Users = () => {\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const userRole = localAuth().user && localAuth().user.role;\n  \n  const error = (msg) => {\n    message.error(msg);\n  }\n\n  const success = (msg) => {\n    message.success(msg);\n  }\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    if (users.error) {\n      error(users.error);\n    } else if (users.deleteSuccess === true) {\n      success(\"User deleted!\");\n    } else if (users.roleSuccess === true) {\n      success(\"User role updated\");\n    }\n  }, [ users ]);\n\n  const onRoleChange = (id) => {\n    dispatch(role(id));\n  }\n\n  const onDelete = (id) => {\n    dispatch(deleteUser(id));\n  }\n\n  const userList = users.users && users.users;\n  return (\n    <div style={{ position: \"relative\"}}>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          {users.getLoading === true ? (\n            <div className=\"text-center\" style={{\n              position: \"absolute\",\n              left: \"50%\"\n            }}>\n              <Spin tip=\"Loading...\" />\n            </div>\n          ) : (\n            <Card style={{ minHeight: 450 }}>\n              <CardBody>\n                {users.getLoading === true ? <Spin tip=\"Loading...\" /> : (\n                  <Table responsive hover>\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Phone</th>\n                      {!userRole === \"admin\" ? null: (\n                        <th>Action</th>\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {userList && userList.length > 0 ? userList.map(user => (\n                    <tr key={user._id}>\n                      <td style={{ fontSize: 10 }}>{user.fullname}</td>\n                      <td style={{ fontSize: 10 }}>{user.email}</td>\n                      <td style={{ fontSize: 10 }}>{user.phone}</td>\n                      {userRole !== \"admin\" ? null : (\n                        <td>\n                          {users.deleteLoading === true ? <Spin /> : <DeleteOutlined onClick={() => onDelete(user._id)} style={{ marginLeft: 20, color: \"#ff0000\" }} title=\"Delete user\" />}\n                        </td>\n                      )}\n                      \n                    </tr>\n                  )) : \n                    <div className=\"text-center\">\n                      <p style={{\n                        fontSize: 24\n                      }}>No records found</p>\n                    </div>\n                  }\n                  </tbody>\n                </Table>\n                )}\n              </CardBody>\n            </Card>\n          )}\n          <Row>\n            <Col xs=\"12\" xl=\"12\">\n\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Users;","import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst Chart = ({ monthSaleArr, color, label }) => {\n  const data = {\n    labels: [ 1500, 2000, 2500, 3000 ],\n    datasets: [\n      {\n        label: label,\n        data: monthSaleArr,\n        fill: true,\n        borderColor: color //\"rgba(75,192,192,1)\"\n      },\n    ]\n  };\n\n  const legend = {\n    display: true,\n    position: \"bottom\",\n    labels: {\n      fontColor: \"#323130\",\n      fontSize: 12\n    }\n  };\n  \n  const options = {\n    responsive: true,\n    title: {\n      display: false,\n      text: \"Chart Title\"\n    },\n    scales: {\n      // xAxes: [\n      //   {\n      //     ticks: {\n      //       suggestedMin: 0,\n      //       suggestedMax: 30\n      //     }\n      //   }\n      // ],\n      yAxes: [\n        {\n          ticks: {\n            suggestedMin: 1500,\n            suggestedMax: 300000\n          }\n        }\n      ],\n    }\n  };\n  \n  return (\n    <div>\n      <Line data={data} height={300} width={250} legend={legend} options={options} />\n    </div>\n  );\n  \n}\n\nexport default Chart;","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport \"chartjs-plugin-labels\";\n\nconst PercentageChart = ({ delayedShipments, perce, color, label }) => {\n  const value = perce.toFixed(2);\n  const data = {\n    labels: [0, delayedShipments.length, delayedShipments.length + 1, delayedShipments.length + 2 ],\n    datasets: [\n      {\n        label: label,\n        data: [ 0, value ],\n        fill: true,\n        borderColor: color\n      },\n    ]\n  };\n\n  const legend = {\n    display: true,\n    position: \"bottom\",\n    labels: {\n      fontColor: \"#323130\",\n      fontSize: 12\n    }\n  };\n  \n  const options = {\n    plugins: {\n      labels: {\n        // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'\n        render: 'percentage',\n        precision: 2,\n        // show the real calculated percentages from the values and don't apply the additional logic to fit the percentages to 100 in total, default is false\n        showActualPercentages: true,\n\n       \n      }\n    },\n    title: {\n      display: false,\n      text: \"Chart Title\"\n    },\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 30\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            suggestedMin: \"0\",\n            suggestedMax: \"100\"\n          }\n        }\n      ],\n    }\n  };\n  \n\n  \n  return (\n    <div>\n      <Line data={data} height={300} width={250} legend={legend} options={options} />\n    </div>\n  );\n  \n}\n\nexport default PercentageChart;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, CardBody, Col, Row } from \"reactstrap\";\nimport { Divider } from \"antd\";\nimport { MailOutlined, UserOutlined, TableOutlined, PhoneOutlined, LikeOutlined, ExclamationCircleOutlined, SnippetsOutlined, CheckSquareOutlined, CheckCircleOutlined, CarOutlined, StockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport { getShipments } from \"../../store/actions/action_shipment\";\nimport { localAuth } from \"../../helper/authentcate\";\nimport Chart from \"../pages/Chart\";\nimport PercentageChart from \"../pages/PercentageChart\";\n\nconst DashboardHome = (props) => {\n    const shipments = useSelector(state => state.shipment);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getShipments());\n    }, [ dispatch ]);\n\n\n    const shipmentList = shipments.shipments && shipments.shipments.length;\n    const allShipment = shipments.shipments;\n    const deliveredList = allShipment.filter(shipment => shipment.status === \"delivered_to_receiver\");\n    const pendingView = allShipment.filter(shipment => shipment.isView === false);\n    const unpaidDeliveryList = allShipment.filter(shipment => shipment.paid === false);\n    const approvedList = allShipment.filter(shipment => shipment.status !== \"pending\");\n    const pendingShipments = allShipment.filter(shipment => shipment.status === \"pending\");\n    const delayedShipments = allShipment.filter(shipment => shipment.status === \"delayed\");\n    const pendingPaymentList = [];\n    const currentMonth = new Date().getMonth();\n    const toTwoDigits = currentMonth.length === 2 ? 1 + currentMonth : \"0\" + (1 + currentMonth) ;\n    let currentMonthSale = [];\n    let monthSaleArr = [];\n    for (let i = 0; i < unpaidDeliveryList.length; i++) {\n        pendingPaymentList.push(unpaidDeliveryList[i].amount);\n    }\n\n    for (let i = 0; i < allShipment.length; i++) {\n        let eachShipment = allShipment[i];\n        if (eachShipment && eachShipment.createdAt && eachShipment.createdAt.slice(5, 7) == toTwoDigits) {\n            currentMonthSale.push(eachShipment);\n        }\n    }\n\n    for (let i = 0; i < currentMonthSale.length; i++) {\n        // monthSaleArr.push({amount: currentMonthSale[i].amount, name: \"Current month sale\"});\n        monthSaleArr.push(currentMonthSale[i].amount);\n    }\n\n    const amt = monthSaleArr.map(amount => amount.amount)\n    const currentMonthAmt = monthSaleArr.reduce((a, b) => a + b, 0);\n    const userEmail = localAuth().user && localAuth().user.email;\n    const pendingPayment = pendingPaymentList.reduce((a, b) => a + b, 0);\n    const delayPercent = (delayedShipments.length * 100) / allShipment.length;\n    return (\n        <div>\n            <Card className=\"mb-3\">\n                <CardBody>\n                    <Row>\n                        <Col xs=\"3\" xl=\"1\">\n                            <div className=\"sy-background\">SY</div>\n                        </Col>\n                        <Col xs=\"12\" xl=\"9\">\n                            <Row>\n                                <Col><h5>System Administration</h5></Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"6\" xl=\"3\"><MailOutlined style={{\n                                    marginRight: \"3px\"\n                                }} />{userEmail && userEmail}</Col>\n                                <Col xs=\"6\" xl=\"3\"><UserOutlined style={{\n                                    marginRight: \"3px\"\n                                }}/>{\"General Manager\"}</Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs=\"12\" xl=\"3\">\n                            <Row>\n                                <Col xs=\"1\" xl=\"2\"><CheckSquareOutlined className=\"icon\"/></Col>\n                                <Col xs=\"10\" xl=\"9\">\n                                    <span style={{ fontSize: 12, color: \"#333\" }}>{approvedList && approvedList.length} Shippments Approved</span>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col xs=\"12\" xl=\"3\">\n                            <Row>\n                                <Col xs=\"1\" xl=\"2\"><StockOutlined className=\"icon\" /></Col>\n                                <Col xs=\"10\" xl=\"9\">\n                                    <span style={{ fontSize: 12, color: \"#333\" }}>{pendingView && pendingView.length} Shippments In Stock</span>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col xs=\"12\" xl=\"3\">\n                            <Row>\n                                <Col xs=\"1\" xl=\"2\"><CheckCircleOutlined className=\"icon\" /></Col>\n                                <Col xs=\"10\" xl=\"9\">\n                                    <span style={{ fontSize: 12, color: \"#333\" }}>{deliveredList && deliveredList.length} Shippment Delivered List</span>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col xs=\"12\" xl=\"3\">\n                            <Row>\n                                <Col xs=\"1\" xl=\"2\"><SnippetsOutlined className=\"icon\" /></Col>\n                                <Col xs=\"10\" xl=\"9\">\n                                    <span style={{ fontSize: 12, color: \"#333\" }}>{pendingView && pendingView.length} New Shipping Requests <Link to=\"/dashboard/shipments/new\">View</Link></span>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    \n                </CardBody>\n            </Card>\n            <Row>\n                <Col xs=\"12\" xl=\"3\">\n                    <Card style={{ minHeight: 400 }}>\n                        \n                        <CardBody>\n                            <Row>\n                                <Col xs=\"9\" xl=\"12\">Summary Statitics Summary</Col>\n                            </Row>\n                            <Divider />\n                            <Row className=\"mb-4\">\n                                <Col xs=\"9\" xl=\"9\"><CarOutlined style={{\n                                    marginRight: \"6px\",\n                                    color: \"#1890ff\"\n                                }} />\n                                <Link \n                                    to={`${props.match.url}/shipments`}\n                                    style={{\n                                        textDecoration: \"none\"\n                                    }}\n                                >All Shipments</Link></Col>\n                                <Col xs=\"3\" xl=\"3\">{shipmentList}</Col>\n                            </Row>\n                            <Row className=\"mb-4\">\n                                <Col xs=\"9\" xl=\"9\"><ExclamationCircleOutlined style={{\n                                    marginRight: \"6px\",\n                                    color: \"#1890ff\"\n                                }} />\n                                <Link \n                                    to={`${props.match.url}/shipments/delayed`}\n                                    style={{\n                                        color: \"red\",\n                                        textDecoration: \"none\"\n                                    }}\n                                >Delayed Shipments</Link></Col>\n                                <Col xs=\"3\" xl=\"3\">{delayedShipments && delayedShipments.length}</Col>\n                            </Row>\n                            <Row className=\"mb-4\">\n                                <Col xs=\"9\" xl=\"9\"><PhoneOutlined style={{\n                                    marginRight: \"6px\",\n                                    color: \"#1890ff\"\n                                }} /><Link to={`${props.match.url}/shipments/prealert`} style={{\n                                    color: \"orange\",\n                                    textDecoration: \"none\"\n                                }}>Pre Alert to Approve</Link></Col>\n                                <Col xs=\"3\" xl=\"3\">{pendingShipments && pendingShipments.length}</Col>\n                            </Row>\n                            <Row className=\"mb-4\">\n                                <Col xs=\"9\" xl=\"9\"><TableOutlined style={{\n                                    marginRight: \"6px\",\n                                    color: \"#1890ff\"\n                                }} />\n                                <Link \n                                    to={`${props.match.url}/shipments/new`}\n                                    style={{\n                                        color: \"rgba(0, 0, 0, 0.65)\",\n                                        textDecoration: \"none\"\n                                    }}\n                                >Pickup Lists</Link></Col>\n                                <Col xs=\"3\" xl=\"3\">{pendingView && pendingView.length}</Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"9\" xl=\"9\"><LikeOutlined style={{\n                                    marginRight: \"6px\",\n                                    color: \"#1890ff\"\n                                }} /><Link to={`${props.match.url}/shipments/delivered`} style={{\n                                    color: \"green\"\n                                }}>Delivered</Link></Col>\n                                <Col xs=\"3\" xl=\"3\">{deliveredList && deliveredList.length}</Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col xs=\"12\" xl=\"3\">\n                    <Card style={{ minHeight: 400 }}>\n                        <CardBody>\n                            <Row>\n                                <Col xs=\"12\" xl=\"12\"><h5 style={{\n                                    color: \"#1890ff\"\n                                }}>NGN{pendingPayment && pendingPayment.toFixed(2)}</h5></Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"12\" xl=\"12\">Pending Payment</Col>\n                            </Row>\n                        </CardBody>\n                        <Chart monthSaleArr={pendingPaymentList} color=\"#1890ff\" label=\"Pending payment\" />\n                    </Card>\n                </Col>\n                <Col xs=\"12\" xl=\"3\">\n                    <Card style={{ minHeight: 400 }}>\n                        <CardBody>\n                            <Row>\n                            <Col xs=\"12\" xl=\"12\"><h5 style={{\n                                color: \"orange\"\n                            }}>NGN{currentMonthAmt && currentMonthAmt.toFixed(2)}</h5></Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"12\" xl=\"12\">Current Month Sales</Col>\n                            </Row>\n                        </CardBody>\n                        <Chart monthSaleArr={monthSaleArr} color=\"orange\" label=\"Current month sale\" />\n                    </Card>\n                </Col>\n                <Col xs=\"12\" xl=\"3\">\n                    <Card style={{ minHeight: 400 }}>\n                        <CardBody>\n                            <Row>\n                            <Col xs=\"12\" xl=\"12\"><h5 style={{ color: \"red\"}}>{delayPercent ? delayPercent.toFixed(2) : 0}%</h5></Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"12\" xl=\"12\">Delayed Shipping Percentagge</Col>\n                            </Row>\n                        </CardBody>\n                        <PercentageChart delayedShipments={delayedShipments} perce={delayPercent} color=\"red\" label={\"Delayed shipping %\"} />\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default DashboardHome;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipments, shipmentDelete } from \"../../store/actions/action_shipment\";\nimport { Table, Row, Col, Card, CardBody, Badge } from 'reactstrap';\nimport { message, Spin,  } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Paginations from \"../pages/Pagination\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { localAuth } from \"../../helper/authentcate\";\n\n\nconst DelayedShipments = (props) => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const [ pageOfItems, setPageOfItems ] = useState([]);\n  const [ data, setData ] = useState([]);\n  const delayedShipments = shipment.shipments && shipment.shipments.filter(ship => ship.status === \"delayed\")\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  useEffect(() => {\n    dispatch(getShipments());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    setData(delayedShipments);\n  }, [shipment]);\n\n  const onChangePage = (pageOfItems) => {\n    setPageOfItems(pageOfItems);\n  }\n\n  const onDelete = (id) => {\n    dispatch(shipmentDelete(id));\n  }\n\n  useEffect(() => {\n    if (shipment.error) {\n      error(shipment.error);\n    }\n  }, [ shipment ]);\n\n  const dataSource = delayedShipments;\n  \n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"15px\"\n            }}>Delayed Shipments</h5>\n            <CardBody>\n            {shipment.getLoading === true ? (\n              <div className=\"text-center\"\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"43%\"\n                }}\n              >\n                <Spin tip=\"Loading...\" />\n              </div>\n            ) : (\n              <>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>S/N</th>\n                    <th>Company Name</th>\n                    <th>Contact Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Tracking Number</th>\n                    <th>Status</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pageOfItems && pageOfItems.length > 0 ? pageOfItems.map((data, i) => (\n                    <tr key={data._id}>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td style={{ fontSize: 10 }}>{data.companyName}</td>\n                      <td style={{ fontSize: 10 }}>{data.contactFName} {data.contactLName}</td>\n                      <td style={{ fontSize: 10 }}>{data.email}</td>\n                      <td style={{ fontSize: 10 }}>{data.phone}</td>\n                      <td style={{ fontSize: 10 }}>{data.trackingNumber}</td>\n                      <td style={{ fontSize: 10 }}>{data.status}</td>\n                      <td style={{ fontSize: 10 }}>\n                        <span>{data.isView === false ? <Badge color=\"success\">New</Badge> : null}</span> <Link to={`/dashboard/shipments/${data._id}`}>View</Link> \n                      </td>\n                    </tr>\n                  )) : <p className=\"text-center\" style={{ color: \"#333\" }}>No records found</p>}\n                </tbody>\n              </Table>\n              {dataSource && dataSource.length > 0 ? (\n                <Paginations\n                  items={data}\n                  onChangePage={onChangePage}\n                />\n              ) : null}\n              </>\n            )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n    </div>\n  )\n}\n\nexport default DelayedShipments;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row, Table, Card, CardBody } from \"reactstrap\";\nimport { Button, Spin } from \"antd\";\nimport { localAuth } from \"../../helper/authentcate\";\nimport { getShipment, changeStatus } from \"../../store/actions/action_shipment\";\n\nconst PrealertUpdate = ({ id }) => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const role = localAuth().user && localAuth().user.role;\n  useEffect(() => {\n    dispatch(getShipment(id));\n  }, [ id, dispatch ]);\n  const handleStatus = (status) => {\n    dispatch(changeStatus(status, id));\n  }\n\n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }} responsive>\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"10px\"\n            }}>Pre Alert Shipments</h5>\n            <CardBody>\n            {shipment.getLoading === true ? (\n              <div className=\"text-center\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"43%\"\n              }}\n            >\n              <Spin tip=\"Loading...\" />\n            </div>\n          ) : (\n            <>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>Company Name</th>\n                    <th>Contact Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Tracking Number</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td style={{ fontSize: 10 }}>{shipment.shipment && shipment.shipment.companyName}</td>\n                    <td style={{ fontSize: 10 }}>{shipment.shipment && shipment.shipment.contactFName} {shipment.shipment && shipment.shipment.contactLName}</td>\n                    <td style={{ fontSize: 10 }}>{shipment.shipment && shipment.shipment.email}</td>\n                    <td style={{ fontSize: 10 }}>{shipment.shipment && shipment.shipment.phone}</td>\n                    <td style={{ fontSize: 10 }}>{shipment.shipment && shipment.shipment.trackingNumber}</td>\n                    \n                    <td style={{ fontSize: 10 }}>{shipment.shipment && shipment.shipment.status === \"delivered_to_driver\" ? \"Deliver to driver\" : shipment.shipment.status === \"delivered_to_receiver\" ? \"Delivered to receiver\" : shipment.shipment.status === \"returned\" ? \"Returned\" : shipment.shipment.status && shipment.shipment.status.charAt(0).toUpperCase() + shipment.shipment.status.slice(1)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n              \n              {role === \"admin\" ? (\n                <Row className=\"justify-content-center mt-5\">\n                  <Col xs=\"12\" xl=\"8\">\n                    <Row>\n                      <Col xs=\"12\" xl=\"3\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                          <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button style={{\n                            background: \"green\",\n                            color: \"#fff\"\n                          }}\n                            onClick={() => handleStatus(\"delivered_to_driver\")}\n                          >Delivered to driver</Button>\n                        )}\n                        \n                      </Col>\n                      <Col xs=\"12\" xl=\"3\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                          <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button \n                            type=\"primary\"\n                            onClick={() => handleStatus(\"delivered_to_receiver\")}\n                          >Delivered to receiver</Button>\n                        )}\n                      </Col>\n                      <Col xs=\"12\" xl=\"2\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                            <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button style={{\n                            background: \"blue\",\n                            color: \"#fff\"\n                          }}\n                          onClick={() => handleStatus(\"returned\")}\n                          >Returned</Button>\n                        )}\n                        \n                      </Col>\n                      <Col xs=\"12\" className=\"mb-1\" xl=\"2\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                            <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button style={{\n                            background: \"orange\",\n                            color: \"#fff\"\n                          }}\n                          onClick={() => handleStatus(\"delayed\")}\n                          >Delayed</Button>\n                        )}\n                        \n                      </Col>\n                      <Col xs=\"12\" xl=\"2\" className=\"mb-1\">\n                        {shipment.statusLoading === true ? (\n                          <div className=\"text-center\">\n                            <Spin tip=\"Loading...\" />\n                          </div>\n                        ) : (\n                          <Button type=\"danger\" onClick={() => handleStatus(\"rejected\")}>Rejected</Button>\n                        )}\n                      </Col>\n                    </Row>\n                    \n                  </Col>\n                </Row>\n              ) : null}\n              </>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PrealertUpdate;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipments } from \"../../store/actions/action_shipment\";\nimport { Table, Row, Col, Card, CardBody, Badge } from 'reactstrap';\nimport { message, Spin,  } from \"antd\";\nimport Paginations from \"../pages/Pagination\";\nimport { localAuth } from \"../../helper/authentcate\";\nimport ModalTemplate from \"../pages/Modal\";\nimport PrealertUpdate from \"./PrealertUpdate\";\n\n\nconst PreAlertShipments = (props) => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const [ pageOfItems, setPageOfItems ] = useState([]);\n  const [ data, setData ] = useState([]);\n  const [ view, setView ] = useState(false);\n  const [ id, setId ] = useState(\"\");\n  const prealert = shipment.shipments && shipment.shipments.filter(shipment => shipment.status === \"pending\");\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  useEffect(() => {\n    dispatch(getShipments());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    setData(prealert);\n  }, [ shipment ]);\n\n  const onChangePage = (pageOfItems) => {\n    setPageOfItems(pageOfItems);\n  }\n\n  useEffect(() => {\n    if (shipment.error) {\n      error(shipment.error);\n    }\n  }, [ shipment ]);\n\n  const toggleview = (id) => {\n    setId(id);\n    setView(true);\n  }\n\n  const dataSource = prealert;\n  \n  return (\n    <div>\n      {view === true ? <PrealertUpdate id={id} /> : (\n        <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"10px\"\n            }}>Pre Alert Shipments</h5>\n            <CardBody>\n            {shipment.getLoading === true ? (\n              <div className=\"text-center\"\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"43%\"\n                }}\n              >\n                <Spin tip=\"Loading...\" />\n              </div>\n            ) : (\n              <>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>S/N</th>\n                    <th>Company Name</th>\n                    <th>Contact Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Tracking Number</th>\n                    <th>Delivery Status</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pageOfItems && pageOfItems.length > 0 ? pageOfItems.map((data, i) => (\n                    <tr key={data._id}>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td style={{ fontSize: 10 }}>{data.companyName}</td>\n                      <td style={{ fontSize: 10 }}>{data.contactFName} {data.contactLName}</td>\n                      <td style={{ fontSize: 10 }}>{data.email}</td>\n                      <td style={{ fontSize: 10 }}>{data.phone}</td>\n                      <td style={{ fontSize: 10 }}>{data.trackingNumber}</td>\n                      <td>\n                        {data.status === \"delivered_to_driver\" ? \"Deliver to driver\" : data.status === \"delivered_to_receiver\" ? \"Delivered to receiver\" : data.status === \"returned\" ? \"Returned\" : data.status.charAt(0).toUpperCase() + data.status.slice(1)}\n                      </td>\n                      <td style={{ fontSize: 10 }}>\n                        <span>{data.isView === false ? <Badge color=\"success\">New</Badge> : null}</span> <span style={{\n                          color: \"\",\n                          cursor: \"pointer\"\n                        }} onClick={() => toggleview(data._id)}>View</span>\n                      </td>\n                    </tr>\n                  )) : <p className=\"text-center\" style={{ color: \"#333\" }}>No records found</p>}\n                </tbody>\n              </Table>\n              {dataSource && dataSource.length > 0 ? (\n                <Paginations\n                  items={data}\n                  onChangePage={onChangePage}\n                />\n              ) : null}\n              </>\n            )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      )}\n    </div>\n  )\n}\n\nexport default PreAlertShipments;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipments, shipmentDelete } from \"../../store/actions/action_shipment\";\nimport { Table, Row, Col, Card, CardBody, Badge, CardHeader } from 'reactstrap';\nimport { message, Spin,  } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Paginations from \"../pages/Pagination\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { localAuth } from \"../../helper/authentcate\";\n\n\nconst DeliveredList = (props) => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const [ pageOfItems, setPageOfItems ] = useState([]);\n  const [ data, setData ] = useState([]);\n  const userRole = localAuth().user && localAuth().user.role;\n  const deliveredShipments = shipment.shipments && shipment.shipments.filter(shipment => shipment.delivered === true);\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  useEffect(() => {\n    dispatch(getShipments());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    setData(deliveredShipments);\n  }, [ shipment ]);\n\n  const onChangePage = (pageOfItems) => {\n    setPageOfItems(pageOfItems);\n  }\n\n  \n  const onDelete = (id) => {\n    dispatch(shipmentDelete(id));\n  }\n\n  useEffect(() => {\n    if (shipment.error) {\n      error(shipment.error);\n    }\n  }, [ shipment ]);\n\n  const dataSource = deliveredShipments;\n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"10px\"\n            }}>Delivered Shipments</h5>\n            <CardBody>\n            {shipment.getLoading === true ? (\n              <div className=\"text-center\"\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"43%\"\n                }}\n              >\n                <Spin tip=\"Loading...\" />\n              </div>\n            ) : (\n              <>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>S/N</th>\n                    <th>Company Name</th>\n                    <th>Contact Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Tracking Number</th>\n                    <th>Status</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pageOfItems && pageOfItems.length > 0 ? pageOfItems.map((data, i) => (\n                    <tr key={data._id}>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td style={{ fontSize: 10 }}>{data.companyName}</td>\n                      <td style={{ fontSize: 10 }}>{data.contactFName} {data.contactLName}</td>\n                      <td style={{ fontSize: 10 }}>{data.email}</td>\n                      <td style={{ fontSize: 10 }}>{data.phone}</td>\n                      <td style={{ fontSize: 10 }}>{data.trackingNumber}</td>\n                      <td style={{ fontSize: 10 }}>{data.delivered === false ? \"Pending\" : \"Delivered\"}</td>\n                      <td style={{ fontSize: 10 }}>\n                        <span>{data.isView === false ? <Badge color=\"success\">New</Badge> : null}</span> <Link to={`/dashboard/shipments/${data._id}`}>View</Link> \n                      </td>\n                    </tr>\n                  )) : <p className=\"text-center\" style={{ color: \"#333\" }}>No records found</p>}\n                </tbody>\n              </Table>\n              {dataSource && dataSource.length > 0 ? (\n                <Paginations\n                  items={data}\n                  onChangePage={onChangePage}\n                />\n              ) : null}\n              </>\n            )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n    </div>\n  )\n}\n\nexport default DeliveredList;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShipments, shipmentDelete } from \"../../store/actions/action_shipment\";\nimport { Table, Row, Col, Card, CardBody, Badge } from 'reactstrap';\nimport { message, Spin,  } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Paginations from \"../pages/Pagination\";\nimport { localAuth } from \"../../helper/authentcate\";\n\n\nconst NewShipmentList = (props) => {\n  const shipment = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const [ pageOfItems, setPageOfItems ] = useState([]);\n  const [ data, setData ] = useState([]);\n\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  const newShipments = shipment.shipments && shipment.shipments.filter(shipment => shipment.isView === false);\n  useEffect(() => {\n    dispatch(getShipments());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    setData(newShipments);\n  }, [shipment]);\n\n  const onChangePage = (pageOfItems) => {\n    setPageOfItems(pageOfItems);\n  }\n\n  const onDelete = (id) => {\n    dispatch(shipmentDelete(id));\n  }\n\n  useEffect(() => {\n    if (shipment.error) {\n      error(shipment.error);\n    }\n  }, [ shipment ]);\n\n  const dataSource = newShipments;\n  \n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"10px\"\n            }}>New Shipments</h5>\n            <CardBody>\n            {shipment.getLoading === true ? (\n              <div className=\"text-center\"\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"43%\"\n                }}\n              >\n                <Spin tip=\"Loading...\" />\n              </div>\n            ) : (\n              <>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>S/N</th>\n                    <th>Company Name</th>\n                    <th>Contact Name</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>Tracking Number</th>\n                    <th>Status</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pageOfItems && pageOfItems.length > 0 ? pageOfItems.map((data, i) => (\n                    <tr key={data._id}>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td style={{ fontSize: 10 }}>{data.companyName}</td>\n                      <td style={{ fontSize: 10 }}>{data.contactFName} {data.contactLName}</td>\n                      <td style={{ fontSize: 10 }}>{data.email}</td>\n                      <td style={{ fontSize: 10 }}>{data.phone}</td>\n                      <td style={{ fontSize: 10 }}>{data.trackingNumber}</td>\n                      <td style={{ fontSize: 10 }}>{data.delivered === false ? \"Pending\" : \"Delivered\"}</td>\n                      <td style={{ fontSize: 10 }}>\n                        <span>{data.isView === false ? <Badge color=\"success\">New</Badge> : null}</span> <Link to={`/dashboard/shipments/${data._id}`}>View</Link> \n                      </td>\n                    </tr>\n                  )) : <p className=\"text-center\" style={{ color: \"#333\"}}>No records found</p>}\n                </tbody>\n              </Table>\n              {dataSource && dataSource.length > 0 ? (\n                <Paginations\n                  items={data}\n                  onChangePage={onChangePage}\n                />\n              ) : null}\n              </>\n            )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n    </div>\n  )\n}\n\nexport default NewShipmentList;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, CardBody, Col, Row, Input, Table } from \"reactstrap\";\nimport { Spin, Button } from \"antd\";\nimport { DeleteOutlined, EditOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { createUnit, getUnit, updateUnit, deleteUnit } from \"../../store/actions/action_units\";\n\nconst Settings = () => {\n  const units = useSelector(state => state.units);\n  const dispatch = useDispatch();\n  const [ amount, setAmount ] = useState(\"\");\n  const [ errors, setErrors ] = useState(\"\");\n  const [ unit, setUnit ] = useState(\"\");\n  const [ edit, setEdit ] = useState(false);\n  const [ message, setMessage ] = useState(\"\");\n  const [ id, setId ] = useState(\"\");\n\n  const handleChange = (e, name) => {\n    e.preventDefault();\n    setErrors(\"\");\n    if (name === \"unit\") {\n      setUnit(e.target.value);\n    } else {\n      setAmount(e.target.value);\n    }\n  }\n\n  const onPost = () => {\n    const data = { unit, amount }\n    dispatch(createUnit(data));\n    setAmount(\"\");\n    setUnit(\"\");\n  }\n\n  useEffect(() => {\n    dispatch(getUnit())\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    if (units.error) {\n      setErrors(units.error);\n    } else if (units.updateSuccess === true) {\n      setMessage(\"Updated successfully\")\n    } else if (units.deleteSuccess === true) {\n      setMessage(\"Deleted successfully\")\n    }\n  }, [ units ]);\n\n  const handleDelete = (id) => {\n    dispatch(deleteUnit(id));\n  }\n\n  const toggleEdit = (id) => {\n    setId(id);\n    setEdit(true);\n  }\n\n  const handleUpdate = () => {\n    const data = { amount, unit }\n    dispatch(updateUnit(id, data));\n    setEdit(false)\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" xl=\"6\">\n          <Card className=\"mb-5\">\n            <CardBody>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <h5>New unit</h5>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs=\"12\" xl=\"6\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"unit\">Password</label>\n                    <Input \n                      placeholder=\"Unit\"\n                      type=\"text\"\n                      value={unit}\n                      id=\"unit\"\n                      onChange={(e) => handleChange(e, \"unit\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"unit\"]}</span>\n                  </div>\n                </Col>\n                <Col xs=\"12\" xl=\"6\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"amount\">Amount</label>\n                    <Input \n                      placeholder=\"Amount\"\n                      type=\"text\"\n                      value={amount}\n                      id=\"amount\"\n                      onChange={(e) => handleChange(e, \"amount\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"phone\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col xs=\"12\" xl=\"12\">\n                  {units.loading === true ? (\n                    <div className=\"text-center\">\n                      <Spin tip=\"Processing...\" />\n                    </div>\n                  ) : (\n                    <Button type=\"primary\" \n                    style={{ width: \"100%\",\n                    background: \"#1890ff\"\n                    }}\n                    onClick={(e) => onPost(e)}\n                  >Send</Button>\n                  )}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col xs=\"12\" xl=\"6\">\n          <Card>\n            <CardBody>\n              {message.length > 0 ? <p style={{ color: \"green\" }}>{message}</p> : null}\n              {errors.length > 0 ? <p style={{ color: \"red\" }}>{errors}</p> : null}\n              {edit === true ? (\n                <>\n                  <Row>\n                    <Col xs=\"12\" xl=\"12\">\n                      <h5>Edit unit</h5>\n                    </Col>\n                  </Row>\n                  \n                  \n                  <Row>\n                    <Col xs=\"12\" xl=\"6\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"unit\">Unit</label>\n                        <Input \n                          placeholder=\"Unit\"\n                          type=\"text\"\n                          value={unit}\n                          id=\"unit\"\n                          onChange={(e) => handleChange(e, \"unit\")}\n                        />\n                        <span style={{ color: \"#ff0000\" }}>{errors[\"unit\"]}</span>\n                      </div>\n                    </Col>\n                    <Col xs=\"12\" xl=\"6\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <Input \n                          placeholder=\"Amount\"\n                          type=\"text\"\n                          value={amount}\n                          id=\"amount\"\n                          onChange={(e) => handleChange(e, \"amount\")}\n                        />\n                        <span style={{ color: \"#ff0000\" }}>{errors[\"phone\"]}</span>\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row className=\"\">\n                    <Col xs=\"12\" xl=\"12\">\n                      {units.updateLoading === true ? (\n                        <div className=\"text-center\">\n                          <Spin tip=\"Processing...\" />\n                        </div>\n                      ) : (\n                        <Button type=\"primary\" \n                        style={{ width: \"100%\",\n                        background: \"#1890ff\"\n                        }}\n                        onClick={(e) => handleUpdate(e)}\n                      >Edit</Button>\n                      )}\n                      <ArrowLeftOutlined size=\"large\" onClick={() => setEdit(false)} /> Back \n                    </Col>\n                  </Row>\n                </>\n              ) : (\n                <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>Unit</th>\n                    <th>Amount</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {units.units && units.units.length > 0 ? units.units.map(unit => (\n                    <tr key={unit._id}>\n                      <td>{unit.unit}</td>\n                      <td>{unit.amount}</td>\n                      <td>\n                        {units.updateLoading === true ? <Spin tip=\"Processing...\" /> : (\n                          <EditOutlined onClick={() => toggleEdit(unit._id)} style={{ color: \"#1890ff\" }} />\n                        )}\n                      </td>\n                      <td>\n                        {units.deleteLoading === true ? <Spin tip=\"Processing...\" /> : <DeleteOutlined onClick={() => handleDelete(unit._id)} style={{ color: \"#ff0000\", cursor: \"pointer\" }} />}\n                      </td>\n                    </tr>\n                  )): <p style={{ color: \"#333\"}}>No records</p>}\n                </tbody>\n              </Table>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n    </div>\n  );\n}\n\nexport default Settings;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { \n  Card, \n  CardBody, \n  Col, \n  Row, \n  Table,\n  TabContent,\n  TabPane, \n  Nav, \n  NavItem, \n  NavLink\n } from \"reactstrap\";\nimport { getShipments } from \"../../store/actions/action_shipment\";\nimport moment from \"moment\";\nimport classnames from 'classnames';\n\n\nconst Transactions = () => {\n  const shipments = useSelector(state => state.shipment);\n  const dispatch = useDispatch();\n  const [ allToday, setAlltoday ] = useState(false);\n  const [ allSales, setAllSales ] = useState(false);\n  const [ allMonth, setAllMonth ] = useState(false);\n  const [ allPending, setAllPending ] = useState(false);\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  const allShipments = shipments.shipments && shipments.shipments;\n\n\n  useEffect(() => {\n    dispatch(getShipments());\n  }, []);\n\n  const pendingPayment = allShipments.filter(shipment => shipment.paid === false);\n  const completeTransactions = allShipments.filter(shipment => shipment.paid === true);\n  const pendingPaymentList = [];\n\n  const currentMonth = new Date().getMonth() + 1;\n  const today = new Date().getDate();\n  \n  let currentMonthTrx = [];\n  let currentMonthSale = [];\n  let todayTrx = [];\n  let todaySales = [];\n  let totalSales = [];\n\n  for (let i = 0; i < pendingPayment.length; i++) {\n    const eachPayment = pendingPayment[i];\n    pendingPaymentList.push(eachPayment.amount);\n  }\n\n  for (let i = 0; i < allShipments.length; i++) {\n    let eachShipment = allShipments[i];\n    totalSales.push(eachShipment.amount);\n    const todayDate = moment(today)\n\n    if (eachShipment && eachShipment.createdAt && eachShipment.createdAt.slice(8, 10) == todayDate._i) {\n      todayTrx.push(eachShipment)\n      todaySales.push(eachShipment.amount);\n    }\n  }\n\n  for (let i = 0; i < allShipments.length; i++) {\n    let eachShipment = allShipments[i];\n    const todayMonth = moment(currentMonth);\n    if (eachShipment && eachShipment.createdAt && eachShipment.createdAt.slice(5, 7) == currentMonth) {\n      currentMonthTrx.push(eachShipment);\n      currentMonthSale.push(eachShipment.amount);\n    }\n  }\n\n  const dailySales = todaySales.reduce((a, b) => a + b, 0);\n  const monthlySales = currentMonthSale.reduce((a, b) => a + b, 0);\n  const total = totalSales.reduce((a, b) => a + b, 0);\n  const pendingSales = pendingPaymentList.reduce((a, b) => a + b, 0);\n  const todaySlice = todayTrx && todayTrx.slice(0, 3);\n  const monthSlice = currentMonthTrx.slice(0, 3);\n  const allSlice = allShipments.slice(0, 3)\n  const pendingSlice = pendingPayment.slice(0, 3);\n  \n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"10\">\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '1' })}\n                onClick={() => { toggle('1'); }}\n              >\n                All Transactions\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '2' })}\n                onClick={() => { toggle('2'); }}\n              >\n                Today Transactions\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '3' })}\n                onClick={() => { toggle('3'); }}\n              >\n                Current Month Transactions\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '4' })}\n                onClick={() => { toggle('4'); }}\n              >\n                Pending Transactions\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col sm=\"12\">\n                  <Card>\n                    <CardBody>\n                      {allSales === true ? (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {allShipments && allShipments.length > 0 ? allShipments.map(shipment => (\n                            <tr key={shipment._id}>\n                              <td>{shipment.companyName}</td>\n                              <td>{shipment.trackingNumber}</td>\n                              <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                              <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                              <td>NGN{shipment.amount}</td>\n                            </tr>\n                          )): <p className=\"text-center\" style={{\n                            color: \"#333\"\n                          }}>No records found</p>}\n                        </tbody>\n                      </Table>\n                      ) : (\n                        <Table responsive hovered style={{ fontSize: 12}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {allSlice && allSlice.length > 0 ? allSlice.map(shipment => (\n                            <tr key={shipment._id}>\n                              <td>{shipment.companyName}</td>\n                              <td>{shipment.trackingNumber}</td>\n                              <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                              <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                              <td>NGN{shipment.amount}</td>\n                            </tr>\n                          )): <p className=\"text-center\" style={{\n                            color: \"#333\"\n                          }}>No records found</p>}\n                        </tbody>\n                      </Table>\n                      )}\n                      \n                      <Row>\n                        <Col xl=\"9\"><strong>Total</strong></Col>\n                        <Col xl=\"3\">NGN{total}</Col>\n                      </Row>\n                      {allShipments && allShipments.length > 3 ? (\n                        <span style={{\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            color: \"#1890ff\",\n                            paddingRight: 10\n                          }}\n                          onClick={() => setAllSales(!allSales)}\n                        >{allSales === true ? \"See less...\" : \"See more...\"}</span>\n                      ) : null}\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Row>\n                <Col sm=\"12\">\n                  <Card>\n                    <CardBody>\n                      {allToday === true ? (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {todayTrx && todayTrx.length > 0 ? todayTrx.map(shipment => (\n                              <tr key={shipment._id}>\n                                <td>{shipment.companyName}</td>\n                                <td>{shipment.trackingNumber}</td>\n                                <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                                <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                                <td>NGN{shipment.amount}</td>\n                              </tr>\n                            )): <p className=\"text-center\" style={{\n                              color: \"#333\"\n                            }}>No records found</p>}\n                          </tbody>\n                        </Table>\n                      ) : (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {todaySlice && todaySlice.length > 0 ? todaySlice.map(shipment => (\n                              <tr key={shipment._id}>\n                                <td>{shipment.companyName}</td>\n                                <td>{shipment.trackingNumber}</td>\n                                <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                                <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                                <td>NGN{shipment.amount}</td>\n                              </tr>\n                            )): <p className=\"text-center\" style={{\n                              color: \"#333\",\n                              fontSize: 14\n                            }}>No records found</p>}\n                          </tbody>\n                        </Table>\n                      )}\n                      <Row>\n                        <Col xl=\"9\"><strong>Total</strong></Col>\n                        <Col xl=\"3\">NGN{ dailySales && dailySales}</Col>\n                      </Row>\n                      {todayTrx && todayTrx.length > 3 ? (\n                        <span \n                          style={{\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            color: \"#1890ff\",\n                            paddingRight: 10\n                          }}\n                          onClick={() => setAlltoday(!allToday)}\n                        >{allToday === true ? \"See less...\" : \"See more...\"}</span>\n                      ) : null}\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"3\">\n              <Row>\n                <Col sm=\"12\">\n                  <Card>\n                    <CardBody>\n                      {allMonth === true ? (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {currentMonthTrx && currentMonthTrx.length > 0 ? currentMonthTrx.map(shipment => (\n                              <tr key={shipment._id}>\n                                <td>{shipment.companyName}</td>\n                                <td>{shipment.trackingNumber}</td>\n                                <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                                <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                                <td>NGN{shipment.amount}</td>\n                              </tr>\n                            )): <p className=\"text-center\" style={{\n                              color: \"#333\"\n                            }}>No records found</p>}\n                          </tbody>\n                        </Table>\n                      ) : (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {monthSlice && monthSlice.length > 0 ? monthSlice.map(shipment => (\n                              <tr key={shipment._id}>\n                                <td>{shipment.companyName}</td>\n                                <td>{shipment.trackingNumber}</td>\n                                <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                                <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                                <td>NGN{shipment.amount}</td>\n                              </tr>\n                            )): <p className=\"text-center\" style={{\n                              color: \"#333\",\n                              fontSize: 14\n                            }}>No records found</p>}\n                          </tbody>\n                        </Table>\n                      )}\n                      <Row>\n                        <Col xl=\"9\"><strong>Total</strong></Col>\n                        <Col xl=\"3\">NGN{monthlySales && monthlySales}</Col>\n                      </Row>\n                      {currentMonthTrx && currentMonthTrx.length > 3 ? (\n                        <span \n                          style={{\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            color: \"#1890ff\",\n                            paddingRight: 10\n                          }}\n                          onClick={() => setAllMonth(!allMonth)}\n                        >{allMonth === true ? \"See less...\" : \"See more...\"}</span>\n                      ) : null}\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"4\">\n              <Row>\n                <Col sm=\"12\">\n                  <Card>\n                    <CardBody>\n                      {allPending === true ? (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {pendingPayment && pendingPayment.length > 0 ? allShipments.map(shipment => (\n                              <tr key={shipment._id}>\n                                <td>{shipment.companyName}</td>\n                                <td>{shipment.trackingNumber}</td>\n                                <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                                <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                                <td>NGN{shipment.amount}</td>\n                              </tr>\n                            )): <p className=\"text-center\" style={{\n                              color: \"#333\",\n                              fontSize: 14\n                            }}>No records found</p>}\n                          </tbody>\n                        </Table>\n                      ) : (\n                        <Table responsive hovered style={{ fontSize: 13}}>\n                          <thead>\n                            <tr>\n                              <th>Company name</th>\n                              <th>Tracking number</th>\n                              <th>Date</th>\n                              <th>Paid</th>\n                              <th>Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {pendingSlice && pendingSlice.length > 0 ? pendingSlice.map(shipment => (\n                              <tr key={shipment._id}>\n                                <td>{shipment.companyName}</td>\n                                <td>{shipment.trackingNumber}</td>\n                                <td>{moment(shipment.createdAt).format(\"DD/MM/YYYY\")}</td>\n                                <td>{shipment.paid === false ? \"False\" : \"True\"}</td>\n                                <td>NGN{shipment.amount}</td>\n                              </tr>\n                            )): <p className=\"text-center\" style={{\n                              color: \"#333\",\n                              fontSize: 14\n                            }}>No records found</p>}\n                          </tbody>\n                        </Table>\n                      )}\n                      <Row>\n                        <Col xl=\"9\"><strong>Total</strong></Col>\n                        <Col xl=\"3\">NGN{pendingSales && pendingSales}</Col>\n                      </Row>\n                      {pendingPayment && pendingPayment.length > 3 ? (\n                        <span\n                          style={{\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            color: \"#1890ff\"\n                          }}\n                          onClick={() => setAllPending(!allPending)}\n                        >{allPending === true ? \"See less...\" : \"See more...\"}</span>\n                      ) : null}\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Transactions;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCustomer, getCustomer } from \"../../store/actions/action_customer\";\nimport { Table, Row, Col, Card } from 'reactstrap';\nimport { Spin,  } from \"antd\";\nimport Paginations from \"../pages/Pagination\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\n\nconst Customers = () => {\n  const customers = useSelector(state => state.customer);\n  const dispatch = useDispatch();\n  const [ pageOfItems, setPageOfItems ] = useState([]);\n  const [ data, setData ] = useState([]);\n  const [ errors, setErrors ] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(getCustomer());\n  }, [ dispatch ]);\n\n  useEffect(() => {\n    setData(customers.customers);\n  }, [customers]);\n\n  const onChangePage = (pageOfItems) => {\n    setPageOfItems(pageOfItems);\n  }\n\n  const onDelete = (id) => {\n    dispatch(deleteCustomer(id));\n    setTimeout(() => {\n      window.location.href = \"/dashboard/customers\"\n    }, 100)\n  }\n\n  useEffect(() => {\n    if (customers.error) {\n      setErrors(customers.error);\n    } else if (customers.deleteSuccess === true) {\n      setData(customers.customers)\n    }\n  }, [ customers ]);\n\n  const dataSource = customers.customers && customers.customers;\n  \n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"12\" xl=\"12\">\n          <Card style={{ minHeight: 450 }}>\n            {errors.length > 0 ? <p style={{ color: \"red\"}}>{errors}</p> : null}\n            <h5 style={{\n              color: \"#1890ff\",\n              padding: \"15px\"\n            }}>Customers List</h5>\n            {customers.loading === true ? (\n              <div className=\"text-center\"\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"43%\"\n                }}\n              >\n                <Spin tip=\"Loading...\" />\n              </div>\n            ) : (\n              <>\n              <Table responsive hovered>\n                <thead>\n                  <tr>\n                    <th style={{ fontSize: 12 }}>S/N</th>\n                    <th style={{ fontSize: 12 }}>Company Name</th>\n                    <th style={{ fontSize: 12 }}>First name</th>\n                    <th style={{ fontSize: 12 }}>Last name</th>\n                    <th style={{ fontSize: 12 }}>Email</th>\n                    <th style={{ fontSize: 12 }}>Phone</th>\n                    <th style={{ fontSize: 12 }}>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {pageOfItems && pageOfItems.length > 0 ? pageOfItems.map((data, i) => (\n                    <tr key={data._id}>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td style={{ fontSize: 12 }}>{data.company}</td>\n                      <td style={{ fontSize: 12 }}>{data.firstName}</td>\n                      <td style={{ fontSize: 12 }}>{data.lastName}</td>\n                      <td style={{ fontSize: 12 }}>{data.email}</td>\n                      <td style={{ fontSize: 12 }}>{data.phone}</td>\n                      <td style={{ fontSize: 12 }}>\n                        {customers.loading === true ? (\n                          <Spin tip=\"Processing...\" />\n                        ) : (\n                          <DeleteOutlined size=\"large\" style={{ color: \"red\"}} onClick={() => onDelete(data._id)}/>\n                        )}\n                      </td>\n                    </tr>\n                  )) : <p className=\"text-center\" style={{ color: \"#333\" }}>No records found</p>}\n                </tbody>\n              </Table>\n              {dataSource && dataSource.length > 0 ? (\n                <Paginations\n                  items={data}\n                  onChangePage={onChangePage}\n                />\n              ) : null}\n              </> \n            )}\n          </Card>\n        </Col>\n      </Row>\n      \n    </div>\n  )\n}\n\nexport default Customers;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { deleteReport, getReport } from \"../../store/actions/action_report\";\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport { message, Spin, Button,  } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\n\nconst ReportList = ({ setToggle }) => {\n  const reports = useSelector(state => state.report);\n  const dispatch = useDispatch();\n\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  useEffect(() => {\n    dispatch(getReport());\n  }, [ dispatch ]);\n\n  \n  const onDelete = (id) => {\n    dispatch(deleteReport(id));\n  }\n\n  useEffect(() => {\n    if (reports.error) {\n      error(reports.error);\n    }\n  }, [ reports ]);\n\n  useEffect(() => {\n    if (reports.success === true) {\n      setToggle(false);\n    }\n  }, [ reports ]);\n\n  const reportList = reports.reports && reports.reports;\n  \n  return (\n    <div>\n      <Row>\n        <Col xs=\"10\" xl=\"12\">\n          {reports.getLoading === true ? (\n            <div className=\"text-center\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"43%\"\n              }}\n            >\n              <Spin tip=\"Loading...\" />\n            </div>\n          ) : (\n            reportList && reportList.length > 0 ? reportList.map(report => (\n              <Card>\n                <CardBody>\n                  <Row key={report._id}>\n                    <Col xl=\"12\">\n                      <div className=\"mb-3\">\n                        <span style={{ fontSize: 18}}>{report.reporter && report.reporter.fullname} | {moment(report.createdAt).format(\"hh:mm:ss a\")}</span>\n                      </div>\n                      <span style={{\n                        color: \"#333\",\n                        fontSize: 16,\n                        marginTop: 10,\n                        marginBottom: 10\n                      }}><strong>{report.title}</strong></span>\n                      <div>{report.report}</div>\n                      {reports.deleteLoading === true ? <Spin tip=\"Processing...\" /> : (\n                        <Button style={{\n                          float: \"right\"\n                        }} type=\"danger\" onClick={() => onDelete(report._id)}>Delete</Button>\n                      )}\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            )) : (\n              <p className=\"text-left\" style={{ color: \"#333\" }}>No records found</p>\n            )\n          )}\n        </Col>\n      </Row>\n      <Row className=\"mt-2\">\n        <Col sm=\"10\"></Col>\n        <Col sm=\"2\">\n          <span \n            onClick={() => setToggle(false)}\n            style={{ color: \"#1890ff\", float: \"right\", cursor: \"pointer\" }}>\n              <ArrowLeftOutlined /> Back\n          </span></Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ReportList;","import React, { useState, useEffect } from \"react\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { Card, CardBody, Row, Col, Input } from \"reactstrap\";\nimport { Spin, Button, message } from \"antd\";\nimport { sendReport } from \"../../store/actions/action_report\";\nimport ReportList from \"./ReportList\";\n\nexport const Report = () => {\n  const reports = useSelector(state => state.report);\n  const [ title, setTitle ] = useState(\"\");\n  const [ report, setReport ] = useState(\"\");\n  const [ setErrors ] = useState(\"\");\n  const [ toggle, setToggle ] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleChange = (e, name) => {\n    e.preventDefault();\n    setErrors(\"\");\n    if (name === \"title\") {\n      setTitle(e.target.value);\n    } else {\n      setReport(e.target.value);\n    }\n  }\n\n  const handleSubmit = () => {\n    const data = {\n      title, report\n    }\n    dispatch(sendReport(data));\n  }\n\n  const info = (msg) => {\n    message.success(msg);\n  };\n\n  const error = (msg) => {\n    message.error(msg);\n  };\n\n  useEffect(() => {\n    if (reports.success === true) {\n      info(\"Report sent\");\n    } else if (reports.error && reports.error.length > 0) {\n      error(reports.error);\n    }\n  }, [ dispatch, reports ]);\n\n  return (\n    <div>\n      {toggle === true ? <ReportList setToggle={setToggle} /> : (\n        <Row className=\"justify-content-center\">\n          <Col xl=\"12\">\n            <Card>\n              <CardBody style={{ minHeight: 400 }}>\n                <Row className=\"justify-content-center\">\n                  <Col xl=\"6\" className=\"mt-5\">\n                    <h6>Send Report</h6>\n                    <Row className=\"mb-3\">\n                      <Col xl=\"12\">\n                        <Input \n                          type=\"text\" \n                          placeholder=\"Title\"\n                          value={title}\n                          onChange={(e) => handleChange(e, \"title\")}\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col xl=\"12\">\n                        <Input \n                          type=\"textarea\" \n                          placeholder=\"What's on your mind...\"\n                          value={report}\n                          onChange={(e) => handleChange(e, \"report\")}\n                        />\n                      </Col>\n                    </Row>\n                    {reports.loading === true ? (\n                      <div className=\"text-center\">\n                        <Spin tip=\"Processing...\" />\n                      </div>\n                    ) : (\n                      <Button style={{\n                          width: \"100%\",\n                          marginTop: 15\n                        }} type=\"primary\"\n                        onClick={() => handleSubmit()}\n                      >Send Report</Button>\n                    )}\n                  </Col>\n                </Row>\n                <Row className=\"mt-2\">\n                  <Col sm=\"9\">\n                  <span onClick={() => setToggle(true)} style={{\n                      color: \"#1890ff\",\n                      float: \"right\"\n                    }}\n                  >\n                    View Report List\n                  </span>\n                  </Col>\n                  <Col sm=\"2\">\n                  \n                  </Col>\n                </Row>\n              </CardBody>\n              <Row>\n                <Col xl=\"10\"></Col>\n                <Col xl=\"2\"></Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </div>\n  )\n}","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Layout, Breadcrumb } from 'antd';\n\nimport SideBar from \"./Sidebar\";\nimport Shipments from \"./Shipments\";\nimport ShipmentDetails from \"./ShipmentDetails\";\nimport DashboardHeader from \"./Header\";\nimport Users from \"./Users\";\nimport DashboardHome from \"./DashboardHome\";\nimport DelayedShipments from \"./DelayedShipment\";\nimport PreAlertShipments from \"./PreAlert\";\nimport DeliveredList from \"./DeliveredList\";\nimport NewShipmentList from \"./NewShipmentList\";\nimport Settings from \"./Settings\";\nimport Transactions from \"./Transactions\";\nimport Customer from \"./Customers\";\nimport {Report} from \"./Report\";\nconst { Content, Footer } = Layout;\n\nexport default class Dashboard extends Component{\n  state = {\n    collapsed: false,\n  };\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { collapsed } = this.state;\n    const { match } = this.props;\n    \n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <SideBar onCollapse={this.onCollapse} collapsed={collapsed} />\n        <Layout className=\"site-layout\">\n          <DashboardHeader />\n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item></Breadcrumb.Item>\n              <Breadcrumb.Item></Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-background\" style={{ padding: 4, minHeight: 360 }}>\n              <Switch>\n                <Route exact path={`${match.url}`} render={(props) => <DashboardHome {...props} />} />\n                <Route exact path={`${match.url}/customers`} render={(props) => <Customer {...props} />} />\n                <Route exact path={`${match.url}/shipments`} render={(props) => <Shipments {...props} />} />\n                <Route exact path={`${match.url}/users`} render={(props) => <Users {...props} />} />\n                <Route path={`${match.url}/shipments/prealert`} render={(props) => \n                <PreAlertShipments {...props} />} />\n                <Route exact path={`${match.url}/shipments/delayed`} render={(props) => \n                <DelayedShipments {...props} />} />\n                <Route exact path={`${match.url}/shipments/new`} render={(props) => <NewShipmentList {...props} />} />\n                <Route exact path={`${match.url}/shipments/delivered`} render={(props) => \n                <DeliveredList  {...props}/>} />\n                <Route exact path={`${match.url}/shipments/:shipmentId`} render={(props) => <ShipmentDetails {...props} />} />\n                <Route exact path={`${match.url}/transactions`} render={(props) => < Transactions {...props} />} />\n                <Route exact path={`${match.url}/reports`} render={(props) => < Report {...props}/>} />\n                <Route exact path={`${match.url}/settings`} render={(props) => < Settings {...props} />} />\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>&copy; {new Date().getFullYear()} Swissdarl Freight and Logistics Ltd </Footer>\n        </Layout>\n      </Layout>\n    )\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Button, Spin } from \"antd\";\nimport { Row, Col, Card, CardBody } from \"reactstrap\";\nimport Header from \"../pages/Header\";\nimport Footer from \"../pages/Footer\";\nimport { register } from \"../../store/actions/action_user\";\n\nconst Signup = () => {\n  const users = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n  const [ fullname, setFullname ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ password, setPassword ] = useState(\"\");\n  const [ phone, setPhone ]  = useState(\"\");\n  const [ errors, setErrors ] = useState({});\n  const [ message, setMessage ] = useState(\"\");\n\n  const formValidation = () => {\n    let formValid = true;\n    let errors = {};\n\n    if (!fullname || typeof fullname !== \"string\") {\n      formValid = false;\n      errors[\"fullname\"] = \"Your full name is required\";\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      formValid = false;\n      errors[\"email\"] = \"Invalid email\"\n    } else if (!password || password.length < 5) {\n      formValid = false;\n      errors[\"password\"] = \"Password must not be less than 5 chanracters long\";\n    } else if (!phone) {\n      formValid = false;\n      errors[\"phone\"] = \"Phone number is required\";\n    }\n\n    setErrors(errors);\n    return formValid;\n  }\n\n  const handleChange = (e, name) => {\n    setErrors(\"\");\n    if (name === \"fullname\") {\n      setFullname(e.target.value);\n    } else if (name === \"email\") {\n      setEmail(e.target.value);\n    } else if (name === \"password\") {\n      setPassword(e.target.value);\n    } else {\n      setPhone(e.target.value);\n    }\n  }\n\n  const onRegister = (e) => {\n    e.preventDefault();\n    if (formValidation()) {\n      const data = {\n        fullname,\n        email,\n        password,\n        phone\n      }\n\n      dispatch(register(data));\n    }\n  }\n\n  useEffect(() => {\n    if (users.registerSuccess === true) {\n      setFullname(\"\");\n      setEmail('');\n      setPassword(\"\");\n      setPhone(\"\");\n      setMessage(\"Account created successfully\");\n      setInterval(() => {\n        window.location.href = \"/accountl\";\n      }, 3000);\n    } else if (users.error && users.error.length > 0 && users.registerSuccess === false) {\n      setErrors(users.error);\n    }\n  }, [ users ]);\n\n  const loading = users.registerLoading;\n  return(\n    <div className=\"home\">\n      <Header />\n      <section className=\"wave-container\">\n        <Row className=\"justify-content-center\">\n          <Col xs=\"8\" xl=\"6\" className=\"home-text\">\n            <h1>Sign up!</h1>\n            <p className=\"animate-p\">Sign up to the admin dashboard</p>\n          </Col>\n        </Row>\n        <svg id=\"curve\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path fill=\"#0099ff\" fill-opacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,149.3C640,171,800,245,960,256C1120,267,1280,213,1360,186.7L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n        </svg>\n      </section>\n     \n       <Row className=\"justify-content-center\">\n        <Col xs=\"10\" xl=\"6\">\n          <Row>\n            <Col>\n              {message.length > 0 ? <p style={{ color: \"#00ff00\", fontWeight: \"bold\"}}>{message}</p> : null}\n              {errors.length > 0 ? <p style={{ color: \"#ff0000\" }}>{errors}</p> : null}\n            </Col>\n          </Row>\n          <Card className=\"mb-5\">\n            <CardBody>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <h5>Create an account</h5>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs=\"12\" xl=\"6\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"name\">Full Name</label>\n                    <Input \n                      placeholder=\"Full Name\"\n                      value={fullname}\n                      id=\"name\"\n                      onChange={(e) => handleChange(e, \"fullname\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"fullname\"]}</span>\n                  </div>\n                </Col>\n                <Col xs=\"12\" xl=\"6\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"email\">Email</label>\n                    <Input \n                      placeholder=\"Email\"\n                      type=\"email\"\n                      value={email}\n                      id=\"email\"\n                      onChange={(e) => handleChange(e, \"email\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"email\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              \n              <Row>\n                <Col xs=\"12\" xl=\"6\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"password\">Password</label>\n                    <Input \n                      placeholder=\"Enter password\"\n                      type=\"password\"\n                      value={password}\n                      id=\"password\"\n                      onChange={(e) => handleChange(e, \"password\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"password\"]}</span>\n                  </div>\n                </Col>\n                <Col xs=\"12\" xl=\"6\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"phone\">Phone Number</label>\n                    <Input \n                      placeholder=\"Phone\"\n                      type=\"text\"\n                      value={phone}\n                      id=\"phone\"\n                      onChange={(e) => handleChange(e, \"phone\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"phone\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col xs=\"12\" xl=\"12\">\n                  {loading === true ? (\n                    <div className=\"text-center\">\n                      <Spin tip=\"Processing...\" />\n                    </div>\n                  ) : (\n                    <Button type=\"primary\" \n                    style={{ width: \"100%\",\n                    background: \"rgb(9, 7, 36)\"\n                    }}\n                    onClick={(e) => onRegister(e)}\n                  >Create Account</Button>\n                  )}\n                </Col>\n              </Row>\n              <Row className=\"mb-2\">\n                <Col xs=\"12\" xl=\"12\">\n                  <p>Already have an account? <Link to=\"/accountl\">Login</Link></p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Signup;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Button, Spin } from \"antd\";\nimport { Row, Col, Card,  CardBody } from \"reactstrap\";\nimport Header from \"../pages/Header\";\nimport { onLogin } from \"../../store/actions/action_user\";\nimport Footer from \"../pages/Footer\";\n\nconst SignIn = () => {\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const [ email, setEmail ] = useState(\"\");\n  const [ password, setPassword ] = useState(\"\");\n  const [ errors, setErrors ] = useState({});\n  const [ message, setMessage ] = useState(\"\");\n\n  const formValidation = () => {\n    let formValid = true;\n    let errors = {};\n\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      formValid = false;\n      errors[\"email\"] = \"Invalid email\"\n    } else if (!password || password.length < 5) {\n      formValid = false;\n      errors[\"password\"] = \"Password must not be less than 5 chanracters long\";\n    } \n\n    setErrors(errors);\n    return formValid;\n  }\n\n  const handleChange = (e, name) => {\n    setErrors(\"\");\n    if (name === \"email\") {\n      setEmail(e.target.value);\n    } else if (name === \"password\") {\n      setPassword(e.target.value);\n    }\n  }\n  const handleLogin = (e) => {\n    e.preventDefault();\n    if (formValidation()) {\n      const data = {\n        email,\n        password,\n      }\n\n      dispatch(onLogin(data));\n    }\n  }\n\n  useEffect(() => {\n    if (users.loginSuccess === true) {\n      setEmail('');\n      setPassword(\"\");\n      setMessage(\"Login Success!!!\");\n      setInterval(() => {\n        window.location.href = \"/dashboard\";\n      }, 3000);\n    } else if (users.error && users.error.length > 0 && users.loginSuccess === false) {\n      setErrors(users.error);\n    }\n  }, [ users ]);\n\n  const loading = users.loginLoading;\n return(\n    <div className=\"home\">\n      <Header />\n      <section className=\"wave-container\">\n        <Row className=\"justify-content-center\">\n          <Col xs=\"8\" xl=\"6\" className=\"home-text\">\n            <h1>Login</h1>\n            <p className=\"animate-p\">Login to the admin dashboard</p>\n          </Col>\n        </Row>\n        <svg id=\"curve\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path fill=\"#0099ff\" fill-opacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,149.3C640,171,800,245,960,256C1120,267,1280,213,1360,186.7L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n        </svg>\n      </section>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"10\" xl=\"6\">\n          <Row>\n            <Col>\n              {message.length > 0 ? <p style={{ color: \"#00ff00\", fontWeight: \"bold\"}}>{message}</p> : null}\n              {errors.length > 0 ? <p style={{ color: \"#ff0000\" }}>{errors}</p> : null}\n            </Col>\n          </Row>\n          <Card className=\"mb-5\">\n            <CardBody>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <h5>Login</h5>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"email\">Email</label>\n                    <Input \n                      placeholder=\"Email\"\n                      type=\"email\"\n                      value={email}\n                      id=\"email\"\n                      onChange={(e) => handleChange(e, \"email\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"email\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              \n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"password\">Password</label>\n                    <Input \n                      placeholder=\"Enter password\"\n                      type=\"password\"\n                      value={password}\n                      id=\"password\"\n                      onChange={(e) => handleChange(e, \"password\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"password\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col xs=\"12\" xl=\"12\">\n                  {loading === true ? (\n                    <div className=\"text-center\">\n                      <Spin tip=\"Processing...\" />\n                    </div>\n                  ) : (\n                    <Button type=\"primary\" \n                      onClick={(e) => handleLogin(e)}\n                      style={{ width: \"100%\",\n                      background: \"rgb(9, 7, 36)\"\n                    }}\n                    >Login</Button>\n                  )}\n                </Col>\n              </Row>\n              <Row className=\"mb-2\">\n                <Col xs=\"12\" xl=\"6\">\n                  <p>Don't have account? <Link to=\"/accounts\">Create account</Link></p>\n                </Col>\n                <Col xs=\"12\" xl=\"6\">\n                  <p><Link to=\"/reset_password\">Forgot password</Link></p>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Footer />\n    </div>\n  )\n}\n\nexport default SignIn;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Button, Spin } from \"antd\";\nimport { Row, Col, Card,  CardBody } from \"reactstrap\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport { sendEmail } from \"../../../store/actions/action_auth\";\n\nconst PasswordReset = () => {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [ email, setEmail ] = useState(\"\");\n  const [ errors, setErrors ] = useState({});\n  const [ message, setMessage ] = useState(\"\");\n\n  const handleChange = (e, name) => {\n    setErrors(\"\");\n    setEmail(e.target.value);\n  }\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const data = {\n      email,\n    }\n\n    dispatch(sendEmail(data));\n  }\n\n  useEffect(() => {\n    if (auth.auth.message && auth.auth.message.length > 0) {\n      setMessage(auth.auth.message);\n    }\n  }, [ auth ]);\n\n  // useEffect(() => {\n  //   if (users.loginSuccess === true) {\n  //     setEmail('');\n  //     setPassword(\"\");\n  //     setMessage(\"Login Success!!!\");\n  //     setInterval(() => {\n  //       window.location.href = \"/dashboard\";\n  //     }, 3000);\n  //   } else if (users.error && users.error.length > 0 && users.loginSuccess === false) {\n  //     setErrors(users.error);\n  //   }\n  // }, [ users ]);\n\n return(\n    <div className=\"home\">\n      <Header />\n      <section className=\"wave-container\">\n        <Row className=\"justify-content-center\">\n          <Col xs=\"8\" xl=\"6\" className=\"home-text\">\n            <h1>Reset password</h1>\n            {/* <p className=\"animate-p\">Login to the admin dashboard</p> */}\n          </Col>\n        </Row>\n        <svg id=\"curve\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path fill=\"#0099ff\" fill-opacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,149.3C640,171,800,245,960,256C1120,267,1280,213,1360,186.7L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n        </svg>\n      </section>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"10\" xl=\"6\">\n          <Row>\n            <Col>\n              <p>{message}</p>\n              {errors && errors.length > 0 ? <p style={{ color: \"#ff0000\" }}>{errors}</p> : null}\n            </Col>\n          </Row>\n          <Card className=\"mb-5\">\n            <CardBody>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <h5>Password reset</h5>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"email\">Email</label>\n                    <Input \n                      placeholder=\"Enter your email\"\n                      type=\"email\"\n                      value={email}\n                      id=\"email\"\n                      onChange={(e) => handleChange(e, \"email\")}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"email\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              \n              <Row className=\"mb-3\">\n                <Col xs=\"12\" xl=\"12\">\n                  {auth.loading === true ? (\n                    <div className=\"text-center\">\n                      <Spin tip=\"Processing...\" />\n                    </div>\n                  ) : (\n                    <Button type=\"primary\" \n                      onClick={(e) => handleLogin(e)}\n                      style={{ width: \"100%\",\n                      background: \"rgb(9, 7, 36)\"\n                    }}\n                    >Send</Button>\n                  )}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Footer />\n    </div>\n  )\n}\n\nexport default PasswordReset;","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Button, Spin } from \"antd\";\nimport { Row, Col, Card,  CardBody } from \"reactstrap\";\nimport Header from \"../Header\";\n// import { onLogin } from \"../../store/actions/action_user\";\nimport Footer from \"../Footer\";\nimport { changePassword } from \"../../../store/actions/action_auth\";\n\nconst ChangePassword = () => {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [ password, setPassword ] = useState(\"\");\n  const [ confirmPassword, setConfirmPassword ] = useState(\"\");\n  const [ errors, setErrors ] = useState({});\n  const [ message ] = useState(\"\");\n\n  const token = window.location.pathname.slice(17, 58);\n\n  const handlePasswordChange = (e) => {\n    e.preventDefault();\n    if (formValidation()) {\n      const data = {\n        password,\n        token\n      }\n\n      dispatch(changePassword(data));\n    }\n    \n  }\n\n  const formValidation = () => {\n    let formValid = true;\n    let errors = {};\n\n    if (password !== confirmPassword) {\n      formValid = false;\n      errors[\"confirmPassword\"] = \"Password do not match\";\n    }\n    setErrors(errors);\n    return formValid;\n  }\n\n  if (auth.success === true) {\n    return <Redirect to=\"/accountl\" />\n  }\n\n return(\n    <div className=\"home\">\n      <Header />\n      <section className=\"wave-container\">\n        <Row className=\"justify-content-center\">\n          <Col xs=\"8\" xl=\"6\" className=\"home-text\">\n            <h1>Reset your password</h1>\n            <p className=\"animate-p\"></p>\n          </Col>\n        </Row>\n        <svg id=\"curve\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path fill=\"#0099ff\" fill-opacity=\"1\" d=\"M0,192L80,176C160,160,320,128,480,149.3C640,171,800,245,960,256C1120,267,1280,213,1360,186.7L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\n        </svg>\n      </section>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"10\" xl=\"6\">\n          <Row>\n            <Col>\n              {message.length > 0 ? <p style={{ color: \"#00ff00\", fontWeight: \"bold\"}}>{message}</p> : null}\n              {errors.length > 0 ? <p style={{ color: \"#ff0000\" }}>{errors}</p> : null}\n            </Col>\n          </Row>\n          <Card className=\"mb-5\">\n            <CardBody>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <h5>Password reset</h5>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"password\">Password</label>\n                    <Input \n                      placeholder=\"Enter your new password\"\n                      type=\"password\"\n                      value={password}\n                      id=\"password\"\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                    \n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs=\"12\" xl=\"12\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"confirm\">Confirm password</label>\n                    <Input \n                      placeholder=\"Confirm password\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      id=\"confirm\"\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <span style={{ color: \"#ff0000\" }}>{errors[\"confirmPassword\"]}</span>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col xs=\"12\" xl=\"12\">\n                  {auth.loading === true ? (\n                    <div className=\"text-center\">\n                      <Spin tip=\"Processing...\" />\n                    </div>\n                  ) : (\n                    <Button type=\"primary\" \n                      onClick={(e) => handlePasswordChange(e)}\n                      style={{ width: \"100%\",\n                      background: \"rgb(9, 7, 36)\"\n                    }}\n                    >Send</Button>\n                  )}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Footer />\n    </div>\n  )\n}\n\nexport default ChangePassword;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from './components/pages/Home';\nimport Quote from './components/pages/Quote';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Signup from './components/Dashboard/Signup';\nimport SignIn from './components/Dashboard/SignIn';\nimport Auth from \"./helper/Auth\";\nimport { Spin } from 'antd';\nimport PasswordReset from './components/pages/Forms/PasswordReset';\nimport ChangePassword from './components/pages/Forms/ChangePassword';\n\nconst styles = {\n  ntf: {\n    textAlign: \"center\",\n    marginTop: 300,\n    fontSize: 32,\n    fontWeight: \"bold\"\n  }\n}\n\nclass App extends Component{\n  state = {\n    loading: true\n  }\n\n  componentDidMount = async () => {\n    this.loaderTimeOut().then(() => {\n      this.setState({\n        loading: false\n      })\n    })\n  }\n\n  loaderTimeOut = () => {\n    return new Promise((resolve) => {\n      setTimeout(() => resolve(), 2500)\n    })\n  }\n\n  render() {\n    const { loading } = this.state;\n    if(loading) {\n      return (\n        <div className=\"page-loader\">\n          <div className=\"spin-loader\">\n            <Spin size=\"large\" />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n          <Route path=\"/request\" render={(props) => <Quote {...props} />} />\n          <Route path=\"/accounts\" render={(props) => <Signup {...props} />} />\n          <Route path=\"/accountl\" render={(props) => <SignIn {...props} />} />\n          <Route path=\"/reset_password\" render={(props) => <PasswordReset {...props} />} />\n          <Route path=\"/change_password/:token\" render={(props) => <ChangePassword {...props} />} />\n          {Auth.isUserAuthenticated() ? (\n            <Route path=\"/dashboard\" render={(props) => <Dashboard {...props} />} />\n          ) : <Redirect to=\"/accountl\" />}\n          <Route path=\"/*\" render={() => <div style={styles.ntf}>404 Page Not Found!!</div>} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./store/reducers\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"antd/dist/antd.css\";\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, logger)));\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}